--[INFO--read_train_csv]---Rows Count--train_df--- 73585
-[INFO--read_train_csv]---len(ls_of_DF_chunks)-- 1472
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 50 entries, 100 to 149
Data columns (total 9 columns):
 #   Column             Non-Null Count  Dtype 
---  ------             --------------  ----- 
 0   id                 50 non-null     object
 1   annotation         50 non-null     object
 2   width              50 non-null     int64 
 3   height             50 non-null     int64 
 4   cell_type          50 non-null     object
 5   plate_time         50 non-null     object
 6   sample_date        50 non-null     object
 7   sample_id          50 non-null     object
 8   elapsed_timedelta  50 non-null     object
dtypes: int64(2), object(7)
memory usage: 3.6+ KB
-[INFO--read_train_csv]---train_df.info---- None
-[INFO--read_train_csv]---all_ids.info---- <class 'numpy.ndarray'>
loading annotations into memory...
Done (t=0.14s)
creating index...
index created!
--coco_structure-----train_dir_path---
 input_dir/img_dir
0it [00:00, ?it/s]
                                                                                                    
--mask_rle-- 289270 5 289972 8 290674 10 291376 12 292078 13 292781 14 293485 13 294188 14 294892 13 295596 13 296300 13 297005 11 297709 11 298414 9 299118 9 299823 8 300527 7 301232 6 301937 4 302641 4 303346 2 304051 1
--split_mask_rle--
 ['289270', '5', '289972', '8', '290674', '10', '291376', '12', '292078', '13', '292781', '14', '293485', '13', '294188', '14', '294892', '13', '295596', '13', '296300', '13', '297005', '11', '297709', '11', '298414', '9', '299118', '9', '299823', '8', '300527', '7', '301232', '6', '301937', '4', '302641', '4', '303346', '2', '304051', '1']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 22 22
--mask_rle--> ls_starts, ls_lengths [289270 289972 290674 291376 292078 292781 293485 294188 294892 295596
 296300 297005 297709 298414 299118 299823 300527 301232 301937 302641
 303346 304051] [ 5  8 10 12 13 14 13 14 13 13 13 11 11  9  9  8  7  6  4  4  2  1]
--mask_rle--> ls_ends [289274 289979 290683 291387 292090 292794 293497 294201 294904 295608
 296312 297015 297719 298422 299126 299830 300533 301237 301940 302644
 303347 304051]
--mask_rle-->  LENGTH -- ls_ends 22
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365880    200]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365880    200]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   200 365880]
                                                                                                    
--coco_structure---ys, xs - [410 410 410 410 410 411 411 411 411 411 411 411 411 412 412 412 412 412
 412 412 412 412 412 413 413 413 413 413 413 413 413 413 413 413 413 414
 414 414 414 414 414 414 414 414 414 414 414 414 415 415 415 415 415 415
 415 415 415 415 415 415 415 415 416 416 416 416 416 416 416 416 416 416
 416 416 416 417 417 417 417 417 417 417 417 417 417 417 417 417 417 418
 418 418 418 418 418 418 418 418 418 418 418 418 419 419 419 419 419 419
 419 419 419 419 419 419 419 420 420 420 420 420 420 420 420 420 420 420
 420 420 421 421 421 421 421 421 421 421 421 421 421 422 422 422 422 422
 422 422 422 422 422 422 423 423 423 423 423 423 423 423 423 424 424 424
 424 424 424 424 424 424 425 425 425 425 425 425 425 425 426 426 426 426
 426 426 426 427 427 427 427 427 427 428 428 428 428 429 429 429 429 430
 430 431] [629 630 631 632 633 627 628 629 630 631 632 633 634 625 626 627 628 629
 630 631 632 633 634 623 624 625 626 627 628 629 630 631 632 633 634 621
 622 623 624 625 626 627 628 629 630 631 632 633 620 621 622 623 624 625
 626 627 628 629 630 631 632 633 620 621 622 623 624 625 626 627 628 629
 630 631 632 619 620 621 622 623 624 625 626 627 628 629 630 631 632 619
 620 621 622 623 624 625 626 627 628 629 630 631 619 620 621 622 623 624
 625 626 627 628 629 630 631 619 620 621 622 623 624 625 626 627 628 629
 630 631 620 621 622 623 624 625 626 627 628 629 630 620 621 622 623 624
 625 626 627 628 629 630 621 622 623 624 625 626 627 628 629 621 622 623
 624 625 626 627 628 629 622 623 624 625 626 627 628 629 622 623 624 625
 626 627 628 623 624 625 626 627 628 624 625 626 627 624 625 626 627 625
 626 626]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 619 634 410 431
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 322297)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 35986)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 268179 2 268880 7 269584 8 270288 10 270992 11 271696 12 272400 12 273104 12 273808 13 274511 14 275215 15 275919 15 276623 16 277327 16 278031 17 278735 17 279439 18 280142 19 280846 19 281549 20 282253 20 282958 19 283663 17 284369 4 284378 4
--split_mask_rle--
 ['268179', '2', '268880', '7', '269584', '8', '270288', '10', '270992', '11', '271696', '12', '272400', '12', '273104', '12', '273808', '13', '274511', '14', '275215', '15', '275919', '15', '276623', '16', '277327', '16', '278031', '17', '278735', '17', '279439', '18', '280142', '19', '280846', '19', '281549', '20', '282253', '20', '282958', '19', '283663', '17', '284369', '4', '284378', '4']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 25 25
--mask_rle--> ls_starts, ls_lengths [268179 268880 269584 270288 270992 271696 272400 273104 273808 274511
 275215 275919 276623 277327 278031 278735 279439 280142 280846 281549
 282253 282958 283663 284369 284378] [ 2  7  8 10 11 12 12 12 13 14 15 15 16 16 17 17 18 19 19 20 20 19 17  4
  4]
--mask_rle--> ls_ends [268180 268886 269591 270297 271002 271707 272411 273115 273820 274524
 275229 275933 276638 277342 278047 278751 279456 280160 280864 281568
 282272 282976 283679 284372 284381]
--mask_rle-->  LENGTH -- ls_ends 25
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365743    337]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365743    337]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   337 365743]
                                                                                                    
--coco_structure---ys, xs - [380 380 381 381 381 381 381 381 381 382 382 382 382 382 382 382 382 383
 383 383 383 383 383 383 383 383 383 384 384 384 384 384 384 384 384 384
 384 384 385 385 385 385 385 385 385 385 385 385 385 385 386 386 386 386
 386 386 386 386 386 386 386 386 387 387 387 387 387 387 387 387 387 387
 387 387 388 388 388 388 388 388 388 388 388 388 388 388 388 389 389 389
 389 389 389 389 389 389 389 389 389 389 389 390 390 390 390 390 390 390
 390 390 390 390 390 390 390 390 391 391 391 391 391 391 391 391 391 391
 391 391 391 391 391 392 392 392 392 392 392 392 392 392 392 392 392 392
 392 392 392 393 393 393 393 393 393 393 393 393 393 393 393 393 393 393
 393 394 394 394 394 394 394 394 394 394 394 394 394 394 394 394 394 394
 395 395 395 395 395 395 395 395 395 395 395 395 395 395 395 395 395 396
 396 396 396 396 396 396 396 396 396 396 396 396 396 396 396 396 396 397
 397 397 397 397 397 397 397 397 397 397 397 397 397 397 397 397 397 397
 398 398 398 398 398 398 398 398 398 398 398 398 398 398 398 398 398 398
 398 399 399 399 399 399 399 399 399 399 399 399 399 399 399 399 399 399
 399 399 399 400 400 400 400 400 400 400 400 400 400 400 400 400 400 400
 400 400 400 400 400 401 401 401 401 401 401 401 401 401 401 401 401 401
 401 401 401 401 401 401 402 402 402 402 402 402 402 402 402 402 402 402
 402 402 402 402 402 403 403 403 403 403 403 403 403] [658 659 655 656 657 658 659 660 661 655 656 657 658 659 660 661 662 655
 656 657 658 659 660 661 662 663 664 655 656 657 658 659 660 661 662 663
 664 665 655 656 657 658 659 660 661 662 663 664 665 666 655 656 657 658
 659 660 661 662 663 664 665 666 655 656 657 658 659 660 661 662 663 664
 665 666 655 656 657 658 659 660 661 662 663 664 665 666 667 654 655 656
 657 658 659 660 661 662 663 664 665 666 667 654 655 656 657 658 659 660
 661 662 663 664 665 666 667 668 654 655 656 657 658 659 660 661 662 663
 664 665 666 667 668 654 655 656 657 658 659 660 661 662 663 664 665 666
 667 668 669 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668
 669 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670
 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 654
 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 653
 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671
 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670
 671 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668
 669 670 671 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666
 667 668 669 670 671 653 654 655 656 657 658 659 660 661 662 663 664 665
 666 667 668 669 670 671 654 655 656 657 658 659 660 661 662 663 664 665
 666 667 668 669 670 656 657 658 659 665 666 667 668]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 652 671 380 403
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 339439)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 21)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 16758)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 283669 6 284371 8 285075 8 285778 9 286482 9 287185 10 287888 11 288592 11 289296 11 289999 12 290703 12 291407 12 292111 12 292816 11 293521 9 294225 9 294930 8 295636 5 296342 2
--split_mask_rle--
 ['283669', '6', '284371', '8', '285075', '8', '285778', '9', '286482', '9', '287185', '10', '287888', '11', '288592', '11', '289296', '11', '289999', '12', '290703', '12', '291407', '12', '292111', '12', '292816', '11', '293521', '9', '294225', '9', '294930', '8', '295636', '5', '296342', '2']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 19 19
--mask_rle--> ls_starts, ls_lengths [283669 284371 285075 285778 286482 287185 287888 288592 289296 289999
 290703 291407 292111 292816 293521 294225 294930 295636 296342] [ 6  8  8  9  9 10 11 11 11 12 12 12 12 11  9  9  8  5  2]
--mask_rle--> ls_ends [283674 284378 285082 285786 286490 287194 287898 288602 289306 290010
 290714 291418 292122 292826 293529 294233 294937 295640 296343]
--mask_rle-->  LENGTH -- ls_ends 19
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365905    175]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365905    175]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   175 365905]
                                                                                                    
--coco_structure---ys, xs - [402 402 402 402 402 402 403 403 403 403 403 403 403 403 404 404 404 404
 404 404 404 404 405 405 405 405 405 405 405 405 405 406 406 406 406 406
 406 406 406 406 407 407 407 407 407 407 407 407 407 407 408 408 408 408
 408 408 408 408 408 408 408 409 409 409 409 409 409 409 409 409 409 409
 410 410 410 410 410 410 410 410 410 410 410 411 411 411 411 411 411 411
 411 411 411 411 411 412 412 412 412 412 412 412 412 412 412 412 412 413
 413 413 413 413 413 413 413 413 413 413 413 414 414 414 414 414 414 414
 414 414 414 414 414 415 415 415 415 415 415 415 415 415 415 415 416 416
 416 416 416 416 416 416 416 417 417 417 417 417 417 417 417 417 418 418
 418 418 418 418 418 418 419 419 419 419 419 420 420] [660 661 662 663 664 665 658 659 660 661 662 663 664 665 658 659 660 661
 662 663 664 665 657 658 659 660 661 662 663 664 665 657 658 659 660 661
 662 663 664 665 656 657 658 659 660 661 662 663 664 665 655 656 657 658
 659 660 661 662 663 664 665 655 656 657 658 659 660 661 662 663 664 665
 655 656 657 658 659 660 661 662 663 664 665 654 655 656 657 658 659 660
 661 662 663 664 665 654 655 656 657 658 659 660 661 662 663 664 665 654
 655 656 657 658 659 660 661 662 663 664 665 654 655 656 657 658 659 660
 661 662 663 664 665 655 656 657 658 659 660 661 662 663 664 665 656 657
 658 659 660 661 662 663 664 656 657 658 659 660 661 662 663 664 657 658
 659 660 661 662 663 664 659 660 661 662 663 661 662]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 654 665 402 420
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 340491)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 19864)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 286392 2 287095 5 287799 6 288503 8 289207 9 289912 9 290616 9 291320 9 292024 8 292728 8 293433 7 294137 7 294841 6 295545 6 296248 7 296952 7 297656 6 298360 6 299065 5
--split_mask_rle--
 ['286392', '2', '287095', '5', '287799', '6', '288503', '8', '289207', '9', '289912', '9', '290616', '9', '291320', '9', '292024', '8', '292728', '8', '293433', '7', '294137', '7', '294841', '6', '295545', '6', '296248', '7', '296952', '7', '297656', '6', '298360', '6', '299065', '5']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 19 19
--mask_rle--> ls_starts, ls_lengths [286392 287095 287799 288503 289207 289912 290616 291320 292024 292728
 293433 294137 294841 295545 296248 296952 297656 298360 299065] [2 5 6 8 9 9 9 9 8 8 7 7 6 6 7 7 6 6 5]
--mask_rle--> ls_ends [286393 287099 287804 288510 289215 289920 290624 291328 292031 292735
 293439 294143 294846 295550 296254 296958 297661 298365 299069]
--mask_rle-->  LENGTH -- ls_ends 19
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365950    130]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365950    130]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   130 365950]
                                                                                                    
--coco_structure---ys, xs - [406 406 407 407 407 407 407 408 408 408 408 408 408 409 409 409 409 409
 409 409 409 410 410 410 410 410 410 410 410 410 411 411 411 411 411 411
 411 411 411 412 412 412 412 412 412 412 412 412 413 413 413 413 413 413
 413 413 413 414 414 414 414 414 414 414 414 415 415 415 415 415 415 415
 415 416 416 416 416 416 416 416 417 417 417 417 417 417 417 418 418 418
 418 418 418 419 419 419 419 419 419 420 420 420 420 420 420 420 421 421
 421 421 421 421 421 422 422 422 422 422 422 423 423 423 423 423 423 424
 424 424 424 424] [567 568 566 567 568 569 570 566 567 568 569 570 571 566 567 568 569 570
 571 572 573 566 567 568 569 570 571 572 573 574 567 568 569 570 571 572
 573 574 575 567 568 569 570 571 572 573 574 575 567 568 569 570 571 572
 573 574 575 567 568 569 570 571 572 573 574 567 568 569 570 571 572 573
 574 568 569 570 571 572 573 574 568 569 570 571 572 573 574 568 569 570
 571 572 573 568 569 570 571 572 573 567 568 569 570 571 572 573 567 568
 569 570 571 572 573 567 568 569 570 571 572 567 568 569 570 571 572 568
 569 570 571 572]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 566 575 406 424
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 294727)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 66666)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 350583 9 351286 10 351988 13 352691 14 353395 14 354099 14 354802 15 355506 14 356210 14 356914 14 357617 15 358321 14 359024 15 359727 16 360431 16 361134 17 361837 18 362541 18 363244 19 363948 20 364651 21 365355 19 366059 15
--split_mask_rle--
 ['350583', '9', '351286', '10', '351988', '13', '352691', '14', '353395', '14', '354099', '14', '354802', '15', '355506', '14', '356210', '14', '356914', '14', '357617', '15', '358321', '14', '359024', '15', '359727', '16', '360431', '16', '361134', '17', '361837', '18', '362541', '18', '363244', '19', '363948', '20', '364651', '21', '365355', '19', '366059', '15']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 23 23
--mask_rle--> ls_starts, ls_lengths [350583 351286 351988 352691 353395 354099 354802 355506 356210 356914
 357617 358321 359024 359727 360431 361134 361837 362541 363244 363948
 364651 365355 366059] [ 9 10 13 14 14 14 15 14 14 14 15 14 15 16 16 17 18 18 19 20 21 19 15]
--mask_rle--> ls_ends [350591 351295 352000 352704 353408 354112 354816 355519 356223 356927
 357631 358334 359038 359742 360446 361150 361854 362558 363262 363967
 364671 365373 366073]
--mask_rle-->  LENGTH -- ls_ends 23
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365726    354]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 1 1 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 1 1 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365726    354]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   354 365726]
                                                                                                    
--coco_structure---ys, xs - [497 497 497 497 497 497 497 497 497 498 498 498 498 498 498 498 498 498
 498 499 499 499 499 499 499 499 499 499 499 499 499 499 500 500 500 500
 500 500 500 500 500 500 500 500 500 500 501 501 501 501 501 501 501 501
 501 501 501 501 501 501 502 502 502 502 502 502 502 502 502 502 502 502
 502 502 503 503 503 503 503 503 503 503 503 503 503 503 503 503 503 504
 504 504 504 504 504 504 504 504 504 504 504 504 504 505 505 505 505 505
 505 505 505 505 505 505 505 505 505 506 506 506 506 506 506 506 506 506
 506 506 506 506 506 507 507 507 507 507 507 507 507 507 507 507 507 507
 507 507 508 508 508 508 508 508 508 508 508 508 508 508 508 508 509 509
 509 509 509 509 509 509 509 509 509 509 509 509 509 510 510 510 510 510
 510 510 510 510 510 510 510 510 510 510 510 511 511 511 511 511 511 511
 511 511 511 511 511 511 511 511 511 512 512 512 512 512 512 512 512 512
 512 512 512 512 512 512 512 512 513 513 513 513 513 513 513 513 513 513
 513 513 513 513 513 513 513 513 514 514 514 514 514 514 514 514 514 514
 514 514 514 514 514 514 514 514 515 515 515 515 515 515 515 515 515 515
 515 515 515 515 515 515 515 515 515 516 516 516 516 516 516 516 516 516
 516 516 516 516 516 516 516 516 516 516 516 517 517 517 517 517 517 517
 517 517 517 517 517 517 517 517 517 517 517 517 517 517 518 518 518 518
 518 518 518 518 518 518 518 518 518 518 518 518 518 518 518 519 519 519
 519 519 519 519 519 519 519 519 519 519 519 519] [694 695 696 697 698 699 700 701 702 693 694 695 696 697 698 699 700 701
 702 691 692 693 694 695 696 697 698 699 700 701 702 703 690 691 692 693
 694 695 696 697 698 699 700 701 702 703 690 691 692 693 694 695 696 697
 698 699 700 701 702 703 690 691 692 693 694 695 696 697 698 699 700 701
 702 703 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 689
 690 691 692 693 694 695 696 697 698 699 700 701 702 689 690 691 692 693
 694 695 696 697 698 699 700 701 702 689 690 691 692 693 694 695 696 697
 698 699 700 701 702 688 689 690 691 692 693 694 695 696 697 698 699 700
 701 702 688 689 690 691 692 693 694 695 696 697 698 699 700 701 687 688
 689 690 691 692 693 694 695 696 697 698 699 700 701 686 687 688 689 690
 691 692 693 694 695 696 697 698 699 700 701 686 687 688 689 690 691 692
 693 694 695 696 697 698 699 700 701 685 686 687 688 689 690 691 692 693
 694 695 696 697 698 699 700 701 684 685 686 687 688 689 690 691 692 693
 694 695 696 697 698 699 700 701 684 685 686 687 688 689 690 691 692 693
 694 695 696 697 698 699 700 701 683 684 685 686 687 688 689 690 691 692
 693 694 695 696 697 698 699 700 701 683 684 685 686 687 688 689 690 691
 692 693 694 695 696 697 698 699 700 701 702 682 683 684 685 686 687 688
 689 690 691 692 693 694 695 696 697 698 699 700 701 702 682 683 684 685
 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 682 683 684
 685 686 687 688 689 690 691 692 693 694 695 696]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 682 703 497 519
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 355157)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 21)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 21)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 21)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 16)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 332150 1 332853 3 333557 3 334261 20 334965 24 335669 27 336373 29 337076 31 337776 36 338477 40 339181 41 339885 6 339896 31 340602 30 341309 28 342015 26 342722 22 343428 13
--split_mask_rle--
 ['332150', '1', '332853', '3', '333557', '3', '334261', '20', '334965', '24', '335669', '27', '336373', '29', '337076', '31', '337776', '36', '338477', '40', '339181', '41', '339885', '6', '339896', '31', '340602', '30', '341309', '28', '342015', '26', '342722', '22', '343428', '13']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 18 18
--mask_rle--> ls_starts, ls_lengths [332150 332853 333557 334261 334965 335669 336373 337076 337776 338477
 339181 339885 339896 340602 341309 342015 342722 343428] [ 1  3  3 20 24 27 29 31 36 40 41  6 31 30 28 26 22 13]
--mask_rle--> ls_ends [332150 332855 333559 334280 334988 335695 336401 337106 337811 338516
 339221 339890 339926 340631 341336 342040 342743 343440]
--mask_rle-->  LENGTH -- ls_ends 18
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365669    411]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365669    411]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   411 365669]
                                                                                                    
--coco_structure---ys, xs - [471 472 472 472 473 473 473 474 474 474 474 474 474 474 474 474 474 474
 474 474 474 474 474 474 474 474 474 475 475 475 475 475 475 475 475 475
 475 475 475 475 475 475 475 475 475 475 475 475 475 475 475 476 476 476
 476 476 476 476 476 476 476 476 476 476 476 476 476 476 476 476 476 476
 476 476 476 476 476 476 477 477 477 477 477 477 477 477 477 477 477 477
 477 477 477 477 477 477 477 477 477 477 477 477 477 477 477 477 477 478
 478 478 478 478 478 478 478 478 478 478 478 478 478 478 478 478 478 478
 478 478 478 478 478 478 478 478 478 478 478 478 479 479 479 479 479 479
 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479
 479 479 479 479 479 479 479 479 479 479 479 479 480 480 480 480 480 480
 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480
 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480 481 481
 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481
 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481
 481 481 481 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482
 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482
 482 482 482 482 483 483 483 483 483 483 483 483 483 483 483 483 483 483
 483 483 483 483 483 483 483 483 483 483 483 483 483 483 483 483 484 484
 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484
 484 484 484 484 484 484 484 484 485 485 485 485 485 485 485 485 485 485
 485 485 485 485 485 485 485 485 485 485 485 485 485 485 485 485 486 486
 486 486 486 486 486 486 486 486 486 486 486 486 486 486 486 486 486 486
 486 486 487 487 487 487 487 487 487 487 487 487 487 487 487] [565 564 565 566 564 565 566 564 565 566 567 568 569 570 571 572 573 574
 575 576 577 578 579 580 581 582 583 564 565 566 567 568 569 570 571 572
 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 564 565 566
 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584
 585 586 587 588 589 590 564 565 566 567 568 569 570 571 572 573 574 575
 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 563
 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581
 582 583 584 585 586 587 588 589 590 591 592 593 559 560 561 562 563 564
 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582
 583 584 585 586 587 588 589 590 591 592 593 594 556 557 558 559 560 561
 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579
 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 556 557
 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575
 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593
 594 595 596 556 557 558 559 560 561 567 568 569 570 571 572 573 574 575
 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593
 594 595 596 597 569 570 571 572 573 574 575 576 577 578 579 580 581 582
 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 572 573
 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591
 592 593 594 595 596 597 598 599 574 575 576 577 578 579 580 581 582 583
 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 577 578
 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596
 597 598 579 580 581 582 583 584 585 586 587 588 589 590 591]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 556 599 471 487
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 289600)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 61 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 62 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 63 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 64 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 65 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 66 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 67 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 68 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 69 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 70 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 71 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 72 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 73 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 74 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 75 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 76 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 77 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 78 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 79 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 80 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 81 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 82 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 83 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 84 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 85 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 86 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 87 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 88 (0, 54114)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 313925 5 314626 11 315327 14 316029 16 316732 16 317436 16 318139 16 318842 17 319545 18 320249 17 320952 18 321655 18 322357 20 323060 21 323764 20 324470 18 325178 13 325885 10 326593 4
--split_mask_rle--
 ['313925', '5', '314626', '11', '315327', '14', '316029', '16', '316732', '16', '317436', '16', '318139', '16', '318842', '17', '319545', '18', '320249', '17', '320952', '18', '321655', '18', '322357', '20', '323060', '21', '323764', '20', '324470', '18', '325178', '13', '325885', '10', '326593', '4']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 19 19
--mask_rle--> ls_starts, ls_lengths [313925 314626 315327 316029 316732 317436 318139 318842 319545 320249
 320952 321655 322357 323060 323764 324470 325178 325885 326593] [ 5 11 14 16 16 16 16 17 18 17 18 18 20 21 20 18 13 10  4]
--mask_rle--> ls_ends [313929 314636 315340 316044 316747 317451 318154 318858 319562 320265
 320969 321672 322376 323080 323783 324487 325190 325894 326596]
--mask_rle-->  LENGTH -- ls_ends 19
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365792    288]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365792    288]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   288 365792]
                                                                                                    
--coco_structure---ys, xs - [445 445 445 445 445 446 446 446 446 446 446 446 446 446 446 446 447 447
 447 447 447 447 447 447 447 447 447 447 447 447 448 448 448 448 448 448
 448 448 448 448 448 448 448 448 448 448 449 449 449 449 449 449 449 449
 449 449 449 449 449 449 449 449 450 450 450 450 450 450 450 450 450 450
 450 450 450 450 450 450 451 451 451 451 451 451 451 451 451 451 451 451
 451 451 451 451 452 452 452 452 452 452 452 452 452 452 452 452 452 452
 452 452 452 453 453 453 453 453 453 453 453 453 453 453 453 453 453 453
 453 453 453 454 454 454 454 454 454 454 454 454 454 454 454 454 454 454
 454 454 455 455 455 455 455 455 455 455 455 455 455 455 455 455 455 455
 455 455 456 456 456 456 456 456 456 456 456 456 456 456 456 456 456 456
 456 456 457 457 457 457 457 457 457 457 457 457 457 457 457 457 457 457
 457 457 457 457 458 458 458 458 458 458 458 458 458 458 458 458 458 458
 458 458 458 458 458 458 458 459 459 459 459 459 459 459 459 459 459 459
 459 459 459 459 459 459 459 459 459 460 460 460 460 460 460 460 460 460
 460 460 460 460 460 460 460 460 460 461 461 461 461 461 461 461 461 461
 461 461 461 461 462 462 462 462 462 462 462 462 462 462 463 463 463 463] [644 645 646 647 648 641 642 643 644 645 646 647 648 649 650 651 638 639
 640 641 642 643 644 645 646 647 648 649 650 651 636 637 638 639 640 641
 642 643 644 645 646 647 648 649 650 651 635 636 637 638 639 640 641 642
 643 644 645 646 647 648 649 650 635 636 637 638 639 640 641 642 643 644
 645 646 647 648 649 650 634 635 636 637 638 639 640 641 642 643 644 645
 646 647 648 649 633 634 635 636 637 638 639 640 641 642 643 644 645 646
 647 648 649 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646
 647 648 649 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646
 647 648 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646
 647 648 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645
 646 647 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643
 644 645 646 647 627 628 629 630 631 632 633 634 635 636 637 638 639 640
 641 642 643 644 645 646 647 627 628 629 630 631 632 633 634 635 636 637
 638 639 640 641 642 643 644 645 646 629 630 631 632 633 634 635 636 637
 638 639 640 641 642 643 644 645 646 633 634 635 636 637 638 639 640 641
 642 643 644 645 636 637 638 639 640 641 642 643 644 645 640 641 642 643]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 627 651 445 463
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 326498)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 27111)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 283571 2 284273 6 284976 7 285678 10 286381 11 287084 12 287788 12 288491 13 289194 14 289899 13 290603 13 291308 13 292013 12 292718 11 293422 11 294127 10 294831 10 295535 10 296240 9 296944 9 297648 9 298353 8 299057 8 299761 6 300466 3 301170 3 301875 1
--split_mask_rle--
 ['283571', '2', '284273', '6', '284976', '7', '285678', '10', '286381', '11', '287084', '12', '287788', '12', '288491', '13', '289194', '14', '289899', '13', '290603', '13', '291308', '13', '292013', '12', '292718', '11', '293422', '11', '294127', '10', '294831', '10', '295535', '10', '296240', '9', '296944', '9', '297648', '9', '298353', '8', '299057', '8', '299761', '6', '300466', '3', '301170', '3', '301875', '1']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 27 27
--mask_rle--> ls_starts, ls_lengths [283571 284273 284976 285678 286381 287084 287788 288491 289194 289899
 290603 291308 292013 292718 293422 294127 294831 295535 296240 296944
 297648 298353 299057 299761 300466 301170 301875] [ 2  6  7 10 11 12 12 13 14 13 13 13 12 11 11 10 10 10  9  9  9  8  8  6
  3  3  1]
--mask_rle--> ls_ends [283572 284278 284982 285687 286391 287095 287799 288503 289207 289911
 290615 291320 292024 292728 293432 294136 294840 295544 296248 296952
 297656 298360 299064 299766 300468 301172 301875]
--mask_rle-->  LENGTH -- ls_ends 27
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365834    246]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365834    246]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   246 365834]
                                                                                                    
--coco_structure---ys, xs - [402 402 403 403 403 403 403 403 404 404 404 404 404 404 404 405 405 405
 405 405 405 405 405 405 405 406 406 406 406 406 406 406 406 406 406 406
 407 407 407 407 407 407 407 407 407 407 407 407 408 408 408 408 408 408
 408 408 408 408 408 408 409 409 409 409 409 409 409 409 409 409 409 409
 409 410 410 410 410 410 410 410 410 410 410 410 410 410 410 411 411 411
 411 411 411 411 411 411 411 411 411 411 412 412 412 412 412 412 412 412
 412 412 412 412 412 413 413 413 413 413 413 413 413 413 413 413 413 413
 414 414 414 414 414 414 414 414 414 414 414 414 415 415 415 415 415 415
 415 415 415 415 415 416 416 416 416 416 416 416 416 416 416 416 417 417
 417 417 417 417 417 417 417 417 418 418 418 418 418 418 418 418 418 418
 419 419 419 419 419 419 419 419 419 419 420 420 420 420 420 420 420 420
 420 421 421 421 421 421 421 421 421 421 422 422 422 422 422 422 422 422
 422 423 423 423 423 423 423 423 423 424 424 424 424 424 424 424 424 425
 425 425 425 425 425 426 426 426 427 427 427 428] [562 563 560 561 562 563 564 565 559 560 561 562 563 564 565 557 558 559
 560 561 562 563 564 565 566 556 557 558 559 560 561 562 563 564 565 566
 555 556 557 558 559 560 561 562 563 564 565 566 555 556 557 558 559 560
 561 562 563 564 565 566 554 555 556 557 558 559 560 561 562 563 564 565
 566 553 554 555 556 557 558 559 560 561 562 563 564 565 566 554 555 556
 557 558 559 560 561 562 563 564 565 566 554 555 556 557 558 559 560 561
 562 563 564 565 566 555 556 557 558 559 560 561 562 563 564 565 566 567
 556 557 558 559 560 561 562 563 564 565 566 567 557 558 559 560 561 562
 563 564 565 566 567 557 558 559 560 561 562 563 564 565 566 567 558 559
 560 561 562 563 564 565 566 567 558 559 560 561 562 563 564 565 566 567
 558 559 560 561 562 563 564 565 566 567 559 560 561 562 563 564 565 566
 567 559 560 561 562 563 564 565 566 567 559 560 561 562 563 564 565 566
 567 560 561 562 563 564 565 566 567 560 561 562 563 564 565 566 567 560
 561 562 563 564 565 561 562 563 561 562 563 562]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 553 567 402 428
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 287970)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 494)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 27)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 493)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 26)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 495)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 70815)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 292013 3 292713 7 293412 13 294098 31 294798 34 295499 36 296203 35 296908 33 297613 30 298318 28 299023 26 299727 25 300432 23 301137 20 301842 17 302547 8
--split_mask_rle--
 ['292013', '3', '292713', '7', '293412', '13', '294098', '31', '294798', '34', '295499', '36', '296203', '35', '296908', '33', '297613', '30', '298318', '28', '299023', '26', '299727', '25', '300432', '23', '301137', '20', '301842', '17', '302547', '8']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 16 16
--mask_rle--> ls_starts, ls_lengths [292013 292713 293412 294098 294798 295499 296203 296908 297613 298318
 299023 299727 300432 301137 301842 302547] [ 3  7 13 31 34 36 35 33 30 28 26 25 23 20 17  8]
--mask_rle--> ls_ends [292015 292719 293424 294128 294831 295534 296237 296940 297642 298345
 299048 299751 300454 301156 301858 302554]
--mask_rle-->  LENGTH -- ls_ends 16
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365711    369]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365711    369]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   369 365711]
                                                                                                    
--coco_structure---ys, xs - [414 414 414 415 415 415 415 415 415 415 416 416 416 416 416 416 416 416
 416 416 416 416 416 417 417 417 417 417 417 417 417 417 417 417 417 417
 417 417 417 417 417 417 417 417 417 417 417 417 417 417 417 417 417 417
 418 418 418 418 418 418 418 418 418 418 418 418 418 418 418 418 418 418
 418 418 418 418 418 418 418 418 418 418 418 418 418 418 418 418 419 419
 419 419 419 419 419 419 419 419 419 419 419 419 419 419 419 419 419 419
 419 419 419 419 419 419 419 419 419 419 419 419 419 419 419 419 420 420
 420 420 420 420 420 420 420 420 420 420 420 420 420 420 420 420 420 420
 420 420 420 420 420 420 420 420 420 420 420 420 420 420 420 421 421 421
 421 421 421 421 421 421 421 421 421 421 421 421 421 421 421 421 421 421
 421 421 421 421 421 421 421 421 421 421 421 421 422 422 422 422 422 422
 422 422 422 422 422 422 422 422 422 422 422 422 422 422 422 422 422 422
 422 422 422 422 422 422 423 423 423 423 423 423 423 423 423 423 423 423
 423 423 423 423 423 423 423 423 423 423 423 423 423 423 423 423 424 424
 424 424 424 424 424 424 424 424 424 424 424 424 424 424 424 424 424 424
 424 424 424 424 424 424 425 425 425 425 425 425 425 425 425 425 425 425
 425 425 425 425 425 425 425 425 425 425 425 425 425 426 426 426 426 426
 426 426 426 426 426 426 426 426 426 426 426 426 426 426 426 426 426 426
 427 427 427 427 427 427 427 427 427 427 427 427 427 427 427 427 427 427
 427 427 428 428 428 428 428 428 428 428 428 428 428 428 428 428 428 428
 428 429 429 429 429 429 429 429 429] [556 557 558 552 553 554 555 556 557 558 547 548 549 550 551 552 553 554
 555 556 557 558 559 529 530 531 532 533 534 535 536 537 538 539 540 541
 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559
 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542
 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 522 523
 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541
 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 522 523
 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541
 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 523 524 525
 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543
 544 545 546 547 548 549 550 551 552 553 554 555 524 525 526 527 528 529
 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547
 548 549 550 551 552 553 525 526 527 528 529 530 531 532 533 534 535 536
 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 526 527
 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545
 546 547 548 549 550 551 526 527 528 529 530 531 532 533 534 535 536 537
 538 539 540 541 542 543 544 545 546 547 548 549 550 527 528 529 530 531
 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549
 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545
 546 547 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544
 545 530 531 532 533 534 535 536 537]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 522 559 414 429
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 271859)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 61 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 62 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 63 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 64 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 65 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 66 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 67 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 68 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 69 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 70 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 71 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 72 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 73 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 74 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 75 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 76 (0, 74982)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 321570 1 322272 3 322975 3 323678 4 324381 4 325085 4 325787 5 326488 8 327190 10 327893 11 328596 12 329287 4 329299 14 329989 2 329995 4 330002 19 330693 34 331399 32 332105 29 332813 21 333520 13 334227 8 334935 3
--split_mask_rle--
 ['321570', '1', '322272', '3', '322975', '3', '323678', '4', '324381', '4', '325085', '4', '325787', '5', '326488', '8', '327190', '10', '327893', '11', '328596', '12', '329287', '4', '329299', '14', '329989', '2', '329995', '4', '330002', '19', '330693', '34', '331399', '32', '332105', '29', '332813', '21', '333520', '13', '334227', '8', '334935', '3']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 23 23
--mask_rle--> ls_starts, ls_lengths [321570 322272 322975 323678 324381 325085 325787 326488 327190 327893
 328596 329287 329299 329989 329995 330002 330693 331399 332105 332813
 333520 334227 334935] [ 1  3  3  4  4  4  5  8 10 11 12  4 14  2  4 19 34 32 29 21 13  8  3]
--mask_rle--> ls_ends [321570 322274 322977 323681 324384 325088 325791 326495 327199 327903
 328607 329290 329312 329990 329998 330020 330726 331430 332133 332833
 333532 334234 334937]
--mask_rle-->  LENGTH -- ls_ends 23
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365832    248]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365832    248]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   248 365832]
                                                                                                    
--coco_structure---ys, xs - [456 457 457 457 458 458 458 459 459 459 459 460 460 460 460 461 461 461
 461 462 462 462 462 462 463 463 463 463 463 463 463 463 464 464 464 464
 464 464 464 464 464 464 465 465 465 465 465 465 465 465 465 465 465 466
 466 466 466 466 466 466 466 466 466 466 466 467 467 467 467 467 467 467
 467 467 467 467 467 467 467 467 467 467 467 468 468 468 468 468 468 468
 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468
 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469
 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469 470 470
 470 470 470 470 470 470 470 470 470 470 470 470 470 470 470 470 470 470
 470 470 470 470 470 470 470 470 470 470 470 470 471 471 471 471 471 471
 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471
 471 471 471 471 471 472 472 472 472 472 472 472 472 472 472 472 472 472
 472 472 472 472 472 472 472 472 473 473 473 473 473 473 473 473 473 473
 473 473 473 474 474 474 474 474 474 474 474 475 475 475] [545 543 544 545 542 543 544 541 542 543 544 540 541 542 543 540 541 542
 543 538 539 540 541 542 535 536 537 538 539 540 541 542 533 534 535 536
 537 538 539 540 541 542 532 533 534 535 536 537 538 539 540 541 542 531
 532 533 534 535 536 537 538 539 540 541 542 518 519 520 521 530 531 532
 533 534 535 536 537 538 539 540 541 542 543 516 517 522 523 524 525 529
 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547
 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533
 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 518 519
 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537
 538 539 540 541 542 543 544 545 546 547 548 549 520 521 522 523 524 525
 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543
 544 545 546 547 548 524 525 526 527 528 529 530 531 532 533 534 535 536
 537 538 539 540 541 542 543 544 527 528 529 530 531 532 533 534 535 536
 537 538 539 530 531 532 533 534 535 536 537 534 535 536]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 516 549 456 475
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 268788)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 61 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 62 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 63 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 64 (0, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 65 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 66 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 67 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 68 (0, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 69 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 70 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 71 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 72 (0, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 73 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 74 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 75 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 76 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 77 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 78 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 79 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 80 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 81 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 82 (0, 80129)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 282893 3 283595 6 284297 8 285000 10 285702 12 286404 15 287107 16 287810 17 288513 18 289216 19 289919 19 290623 19 291327 18 292031 18 292735 17 293439 17 294143 16 294847 15 295551 15 296255 14 296958 15 297662 14 298366 14 299070 13 299773 13 300477 12 301181 11 301885 10 302588 10 303292 9 303996 8 304701 6 305405 5
--split_mask_rle--
 ['282893', '3', '283595', '6', '284297', '8', '285000', '10', '285702', '12', '286404', '15', '287107', '16', '287810', '17', '288513', '18', '289216', '19', '289919', '19', '290623', '19', '291327', '18', '292031', '18', '292735', '17', '293439', '17', '294143', '16', '294847', '15', '295551', '15', '296255', '14', '296958', '15', '297662', '14', '298366', '14', '299070', '13', '299773', '13', '300477', '12', '301181', '11', '301885', '10', '302588', '10', '303292', '9', '303996', '8', '304701', '6', '305405', '5']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 33 33
--mask_rle--> ls_starts, ls_lengths [282893 283595 284297 285000 285702 286404 287107 287810 288513 289216
 289919 290623 291327 292031 292735 293439 294143 294847 295551 296255
 296958 297662 298366 299070 299773 300477 301181 301885 302588 303292
 303996 304701 305405] [ 3  6  8 10 12 15 16 17 18 19 19 19 18 18 17 17 16 15 15 14 15 14 14 13
 13 12 11 10 10  9  8  6  5]
--mask_rle--> ls_ends [282895 283600 284304 285009 285713 286418 287122 287826 288530 289234
 289937 290641 291344 292048 292751 293455 294158 294861 295565 296268
 296972 297675 298379 299082 299785 300488 301191 301894 302597 303300
 304003 304706 305409]
--mask_rle-->  LENGTH -- ls_ends 33
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365648    432]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365648    432]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   432 365648]
                                                                                                    
--coco_structure---ys, xs - [401 401 401 402 402 402 402 402 402 403 403 403 403 403 403 403 403 404
 404 404 404 404 404 404 404 404 404 405 405 405 405 405 405 405 405 405
 405 405 405 406 406 406 406 406 406 406 406 406 406 406 406 406 406 406
 407 407 407 407 407 407 407 407 407 407 407 407 407 407 407 407 408 408
 408 408 408 408 408 408 408 408 408 408 408 408 408 408 408 409 409 409
 409 409 409 409 409 409 409 409 409 409 409 409 409 409 409 410 410 410
 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410 411 411
 411 411 411 411 411 411 411 411 411 411 411 411 411 411 411 411 411 412
 412 412 412 412 412 412 412 412 412 412 412 412 412 412 412 412 412 412
 413 413 413 413 413 413 413 413 413 413 413 413 413 413 413 413 413 413
 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414
 415 415 415 415 415 415 415 415 415 415 415 415 415 415 415 415 415 416
 416 416 416 416 416 416 416 416 416 416 416 416 416 416 416 416 417 417
 417 417 417 417 417 417 417 417 417 417 417 417 417 417 418 418 418 418
 418 418 418 418 418 418 418 418 418 418 418 419 419 419 419 419 419 419
 419 419 419 419 419 419 419 419 420 420 420 420 420 420 420 420 420 420
 420 420 420 420 421 421 421 421 421 421 421 421 421 421 421 421 421 421
 421 422 422 422 422 422 422 422 422 422 422 422 422 422 422 423 423 423
 423 423 423 423 423 423 423 423 423 423 423 424 424 424 424 424 424 424
 424 424 424 424 424 424 425 425 425 425 425 425 425 425 425 425 425 425
 425 426 426 426 426 426 426 426 426 426 426 426 426 427 427 427 427 427
 427 427 427 427 427 427 428 428 428 428 428 428 428 428 428 428 429 429
 429 429 429 429 429 429 429 429 430 430 430 430 430 430 430 430 430 431
 431 431 431 431 431 431 431 432 432 432 432 432 432 433 433 433 433 433] [588 589 590 586 587 588 589 590 591 584 585 586 587 588 589 590 591 583
 584 585 586 587 588 589 590 591 592 581 582 583 584 585 586 587 588 589
 590 591 592 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593
 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 577 578
 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 576 577 578
 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 575 576 577
 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 574 575
 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 574
 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592
 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591
 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591
 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 574
 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 574 575
 576 577 578 579 580 581 582 583 584 585 586 587 588 589 574 575 576 577
 578 579 580 581 582 583 584 585 586 587 588 574 575 576 577 578 579 580
 581 582 583 584 585 586 587 588 574 575 576 577 578 579 580 581 582 583
 584 585 586 587 573 574 575 576 577 578 579 580 581 582 583 584 585 586
 587 573 574 575 576 577 578 579 580 581 582 583 584 585 586 573 574 575
 576 577 578 579 580 581 582 583 584 585 586 573 574 575 576 577 578 579
 580 581 582 583 584 585 572 573 574 575 576 577 578 579 580 581 582 583
 584 572 573 574 575 576 577 578 579 580 581 582 583 572 573 574 575 576
 577 578 579 580 581 582 572 573 574 575 576 577 578 579 580 581 571 572
 573 574 575 576 577 578 579 580 571 572 573 574 575 576 577 578 579 571
 572 573 574 575 576 577 578 572 573 574 575 576 577 572 573 574 575 576]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 571 593 401 433
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 297349)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 495)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 494)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 494)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 494)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 495)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 495)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 57309)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 320839 1 321541 3 322243 5 322945 7 323647 10 324350 11 325052 13 325755 14 326457 16 327160 16 327862 18 328565 18 329267 19 329969 10 329985 3 330670 9 331373 8 332075 9 332778 8 333481 7 334185 6 334888 7 335592 6 336295 6 336999 5 337703 5 338408 3
--split_mask_rle--
 ['320839', '1', '321541', '3', '322243', '5', '322945', '7', '323647', '10', '324350', '11', '325052', '13', '325755', '14', '326457', '16', '327160', '16', '327862', '18', '328565', '18', '329267', '19', '329969', '10', '329985', '3', '330670', '9', '331373', '8', '332075', '9', '332778', '8', '333481', '7', '334185', '6', '334888', '7', '335592', '6', '336295', '6', '336999', '5', '337703', '5', '338408', '3']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 27 27
--mask_rle--> ls_starts, ls_lengths [320839 321541 322243 322945 323647 324350 325052 325755 326457 327160
 327862 328565 329267 329969 329985 330670 331373 332075 332778 333481
 334185 334888 335592 336295 336999 337703 338408] [ 1  3  5  7 10 11 13 14 16 16 18 18 19 10  3  9  8  9  8  7  6  7  6  6
  5  5  3]
--mask_rle--> ls_ends [320839 321543 322247 322951 323656 324360 325064 325768 326472 327175
 327879 328582 329285 329978 329987 330678 331380 332083 332785 333487
 334190 334894 335597 336300 337003 337707 338410]
--mask_rle-->  LENGTH -- ls_ends 27
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365837    243]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365837    243]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   243 365837]
                                                                                                    
--coco_structure---ys, xs - [455 456 456 456 457 457 457 457 457 458 458 458 458 458 458 458 459 459
 459 459 459 459 459 459 459 459 460 460 460 460 460 460 460 460 460 460
 460 461 461 461 461 461 461 461 461 461 461 461 461 461 462 462 462 462
 462 462 462 462 462 462 462 462 462 462 463 463 463 463 463 463 463 463
 463 463 463 463 463 463 463 463 464 464 464 464 464 464 464 464 464 464
 464 464 464 464 464 464 465 465 465 465 465 465 465 465 465 465 465 465
 465 465 465 465 465 465 466 466 466 466 466 466 466 466 466 466 466 466
 466 466 466 466 466 466 467 467 467 467 467 467 467 467 467 467 467 467
 467 467 467 467 467 467 467 468 468 468 468 468 468 468 468 468 468 468
 468 468 469 469 469 469 469 469 469 469 469 470 470 470 470 470 470 470
 470 471 471 471 471 471 471 471 471 471 472 472 472 472 472 472 472 472
 473 473 473 473 473 473 473 474 474 474 474 474 474 475 475 475 475 475
 475 475 476 476 476 476 476 476 477 477 477 477 477 477 478 478 478 478
 478 479 479 479 479 479 480 480 480] [518 516 517 518 514 515 516 517 518 512 513 514 515 516 517 518 510 511
 512 513 514 515 516 517 518 519 509 510 511 512 513 514 515 516 517 518
 519 507 508 509 510 511 512 513 514 515 516 517 518 519 506 507 508 509
 510 511 512 513 514 515 516 517 518 519 504 505 506 507 508 509 510 511
 512 513 514 515 516 517 518 519 503 504 505 506 507 508 509 510 511 512
 513 514 515 516 517 518 501 502 503 504 505 506 507 508 509 510 511 512
 513 514 515 516 517 518 500 501 502 503 504 505 506 507 508 509 510 511
 512 513 514 515 516 517 498 499 500 501 502 503 504 505 506 507 508 509
 510 511 512 513 514 515 516 496 497 498 499 500 501 502 503 504 505 512
 513 514 493 494 495 496 497 498 499 500 501 492 493 494 495 496 497 498
 499 490 491 492 493 494 495 496 497 498 489 490 491 492 493 494 495 496
 488 489 490 491 492 493 494 488 489 490 491 492 493 487 488 489 490 491
 492 493 487 488 489 490 491 492 486 487 488 489 490 491 486 487 488 489
 490 486 487 488 489 490 487 488 489]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 486 519 455 480
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 253197)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 61 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 62 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 63 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 64 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 65 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 66 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 67 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 68 (0, 95736)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 306028 3 306730 9 307434 11 308137 13 308841 13 309545 13 310250 12 310954 12 311659 11 312364 10 313069 8 313774 7
--split_mask_rle--
 ['306028', '3', '306730', '9', '307434', '11', '308137', '13', '308841', '13', '309545', '13', '310250', '12', '310954', '12', '311659', '11', '312364', '10', '313069', '8', '313774', '7']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 12 12
--mask_rle--> ls_starts, ls_lengths [306028 306730 307434 308137 308841 309545 310250 310954 311659 312364
 313069 313774] [ 3  9 11 13 13 13 12 12 11 10  8  7]
--mask_rle--> ls_ends [306030 306738 307444 308149 308853 309557 310261 310965 311669 312373
 313076 313780]
--mask_rle-->  LENGTH -- ls_ends 12
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365958    122]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365958    122]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   122 365958]
                                                                                                    
--coco_structure---ys, xs - [434 434 434 435 435 435 435 435 435 435 435 435 436 436 436 436 436 436
 436 436 436 436 436 437 437 437 437 437 437 437 437 437 437 437 437 437
 438 438 438 438 438 438 438 438 438 438 438 438 438 439 439 439 439 439
 439 439 439 439 439 439 439 439 440 440 440 440 440 440 440 440 440 440
 440 440 441 441 441 441 441 441 441 441 441 441 441 441 442 442 442 442
 442 442 442 442 442 442 442 443 443 443 443 443 443 443 443 443 443 444
 444 444 444 444 444 444 444 445 445 445 445 445 445 445] [491 492 493 489 490 491 492 493 494 495 496 497 489 490 491 492 493 494
 495 496 497 498 499 488 489 490 491 492 493 494 495 496 497 498 499 500
 488 489 490 491 492 493 494 495 496 497 498 499 500 488 489 490 491 492
 493 494 495 496 497 498 499 500 489 490 491 492 493 494 495 496 497 498
 499 500 489 490 491 492 493 494 495 496 497 498 499 500 490 491 492 493
 494 495 496 497 498 499 500 491 492 493 494 495 496 497 498 499 500 492
 493 494 495 496 497 498 499 493 494 495 496 497 498 499]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 488 500 434 445
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 254197)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 105636)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 329923 3 330626 5 331329 6 332033 7 332736 9 333440 12 334142 15 334844 19 335549 19 336253 19 336957 18 337662 16 338366 15 339070 13 339774 11 340479 8 341183 6 341888 4
--split_mask_rle--
 ['329923', '3', '330626', '5', '331329', '6', '332033', '7', '332736', '9', '333440', '12', '334142', '15', '334844', '19', '335549', '19', '336253', '19', '336957', '18', '337662', '16', '338366', '15', '339070', '13', '339774', '11', '340479', '8', '341183', '6', '341888', '4']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 18 18
--mask_rle--> ls_starts, ls_lengths [329923 330626 331329 332033 332736 333440 334142 334844 335549 336253
 336957 337662 338366 339070 339774 340479 341183 341888] [ 3  5  6  7  9 12 15 19 19 19 18 16 15 13 11  8  6  4]
--mask_rle--> ls_ends [329925 330630 331334 332039 332744 333451 334156 334862 335567 336271
 336974 337677 338380 339082 339784 340486 341188 341891]
--mask_rle-->  LENGTH -- ls_ends 18
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365875    205]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365875    205]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   205 365875]
                                                                                                    
--coco_structure---ys, xs - [468 468 468 469 469 469 469 469 470 470 470 470 470 470 471 471 471 471
 471 471 471 472 472 472 472 472 472 472 472 472 473 473 473 473 473 473
 473 473 473 473 473 473 474 474 474 474 474 474 474 474 474 474 474 474
 474 474 474 475 475 475 475 475 475 475 475 475 475 475 475 475 475 475
 475 475 475 475 476 476 476 476 476 476 476 476 476 476 476 476 476 476
 476 476 476 476 476 477 477 477 477 477 477 477 477 477 477 477 477 477
 477 477 477 477 477 477 478 478 478 478 478 478 478 478 478 478 478 478
 478 478 478 478 478 478 479 479 479 479 479 479 479 479 479 479 479 479
 479 479 479 479 480 480 480 480 480 480 480 480 480 480 480 480 480 480
 480 481 481 481 481 481 481 481 481 481 481 481 481 481 482 482 482 482
 482 482 482 482 482 482 482 483 483 483 483 483 483 483 483 484 484 484
 484 484 484 485 485 485 485] [450 451 452 449 450 451 452 453 448 449 450 451 452 453 448 449 450 451
 452 453 454 447 448 449 450 451 452 453 454 455 447 448 449 450 451 452
 453 454 455 456 457 458 445 446 447 448 449 450 451 452 453 454 455 456
 457 458 459 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457
 458 459 460 461 444 445 446 447 448 449 450 451 452 453 454 455 456 457
 458 459 460 461 462 444 445 446 447 448 449 450 451 452 453 454 455 456
 457 458 459 460 461 462 444 445 446 447 448 449 450 451 452 453 454 455
 456 457 458 459 460 461 445 446 447 448 449 450 451 452 453 454 455 456
 457 458 459 460 445 446 447 448 449 450 451 452 453 454 455 456 457 458
 459 445 446 447 448 449 450 451 452 453 454 455 456 457 445 446 447 448
 449 450 451 452 453 454 455 446 447 448 449 450 451 452 453 446 447 448
 449 450 451 447 448 449 450]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 443 462 468 485
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 230835)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 519)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 125362)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 338392 3 339092 7 339791 12 340492 15 341195 16 341898 17 342601 17 343304 18 344007 18 344710 18 345412 19 346115 18 346818 18 347521 18 348224 17 348927 16 349630 15 350334 14 351037 13 351741 11 352445 9 353149 7 353853 3
--split_mask_rle--
 ['338392', '3', '339092', '7', '339791', '12', '340492', '15', '341195', '16', '341898', '17', '342601', '17', '343304', '18', '344007', '18', '344710', '18', '345412', '19', '346115', '18', '346818', '18', '347521', '18', '348224', '17', '348927', '16', '349630', '15', '350334', '14', '351037', '13', '351741', '11', '352445', '9', '353149', '7', '353853', '3']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 23 23
--mask_rle--> ls_starts, ls_lengths [338392 339092 339791 340492 341195 341898 342601 343304 344007 344710
 345412 346115 346818 347521 348224 348927 349630 350334 351037 351741
 352445 353149 353853] [ 3  7 12 15 16 17 17 18 18 18 19 18 18 18 17 16 15 14 13 11  9  7  3]
--mask_rle--> ls_ends [338394 339098 339802 340506 341210 341914 342617 343321 344024 344727
 345430 346132 346835 347538 348240 348942 349644 350347 351049 351751
 352453 353155 353855]
--mask_rle-->  LENGTH -- ls_ends 23
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365761    319]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365761    319]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   319 365761]
                                                                                                    
--coco_structure---ys, xs - [480 480 480 481 481 481 481 481 481 481 482 482 482 482 482 482 482 482
 482 482 482 482 483 483 483 483 483 483 483 483 483 483 483 483 483 483
 483 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484 485
 485 485 485 485 485 485 485 485 485 485 485 485 485 485 485 485 486 486
 486 486 486 486 486 486 486 486 486 486 486 486 486 486 486 487 487 487
 487 487 487 487 487 487 487 487 487 487 487 487 487 487 487 488 488 488
 488 488 488 488 488 488 488 488 488 488 488 488 488 488 488 489 489 489
 489 489 489 489 489 489 489 489 489 489 489 489 489 489 489 490 490 490
 490 490 490 490 490 490 490 490 490 490 490 490 490 490 490 490 491 491
 491 491 491 491 491 491 491 491 491 491 491 491 491 491 491 491 492 492
 492 492 492 492 492 492 492 492 492 492 492 492 492 492 492 492 493 493
 493 493 493 493 493 493 493 493 493 493 493 493 493 493 493 493 494 494
 494 494 494 494 494 494 494 494 494 494 494 494 494 494 494 495 495 495
 495 495 495 495 495 495 495 495 495 495 495 495 495 496 496 496 496 496
 496 496 496 496 496 496 496 496 496 496 497 497 497 497 497 497 497 497
 497 497 497 497 497 497 498 498 498 498 498 498 498 498 498 498 498 498
 498 499 499 499 499 499 499 499 499 499 499 499 500 500 500 500 500 500
 500 500 500 501 501 501 501 501 501 501 502 502 502] [471 472 473 467 468 469 470 471 472 473 462 463 464 465 466 467 468 469
 470 471 472 473 459 460 461 462 463 464 465 466 467 468 469 470 471 472
 473 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 457
 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 456 457
 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 455 456 457
 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 454 455 456
 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 453 454 455
 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 451 452 453
 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 450 451
 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 449 450
 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 447 448
 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 446 447 448
 449 450 451 452 453 454 455 456 457 458 459 460 461 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 445 446 447 448 449 450 451 452
 453 454 455 456 457 458 444 445 446 447 448 449 450 451 452 453 454 455
 456 444 445 446 447 448 449 450 451 452 453 454 444 445 446 447 448 449
 450 451 452 444 445 446 447 448 449 450 444 445 446]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 444 473 480 502
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 231378)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 119634)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 339069 1 339772 4 340475 6 341178 6 341881 6 342584 6 343287 6 343990 7 344693 7 345395 8 346097 9 346795 14 347498 14 348201 14 348905 13 349608 13 350310 13 351012 14 351714 16 352416 17 353119 18 353822 18 354526 18 355230 17 355935 16 356639 16 357346 12 358051 11 358755 10 359460 9 360166 6 360872 4
--split_mask_rle--
 ['339069', '1', '339772', '4', '340475', '6', '341178', '6', '341881', '6', '342584', '6', '343287', '6', '343990', '7', '344693', '7', '345395', '8', '346097', '9', '346795', '14', '347498', '14', '348201', '14', '348905', '13', '349608', '13', '350310', '13', '351012', '14', '351714', '16', '352416', '17', '353119', '18', '353822', '18', '354526', '18', '355230', '17', '355935', '16', '356639', '16', '357346', '12', '358051', '11', '358755', '10', '359460', '9', '360166', '6', '360872', '4']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 32 32
--mask_rle--> ls_starts, ls_lengths [339069 339772 340475 341178 341881 342584 343287 343990 344693 345395
 346097 346795 347498 348201 348905 349608 350310 351012 351714 352416
 353119 353822 354526 355230 355935 356639 357346 358051 358755 359460
 360166 360872] [ 1  4  6  6  6  6  6  7  7  8  9 14 14 14 13 13 13 14 16 17 18 18 18 17
 16 16 12 11 10  9  6  4]
--mask_rle--> ls_ends [339069 339775 340480 341183 341886 342589 343292 343996 344699 345402
 346105 346808 347511 348214 348917 349620 350322 351025 351729 352432
 353136 353839 354543 355246 355950 356654 357357 358061 358764 359468
 360171 360875]
--mask_rle-->  LENGTH -- ls_ends 32
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365731    349]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365731    349]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   349 365731]
                                                                                                    
--coco_structure---ys, xs - [481 482 482 482 482 483 483 483 483 483 483 484 484 484 484 484 484 485
 485 485 485 485 485 486 486 486 486 486 486 487 487 487 487 487 487 488
 488 488 488 488 488 488 489 489 489 489 489 489 489 490 490 490 490 490
 490 490 490 491 491 491 491 491 491 491 491 491 492 492 492 492 492 492
 492 492 492 492 492 492 492 492 493 493 493 493 493 493 493 493 493 493
 493 493 493 493 494 494 494 494 494 494 494 494 494 494 494 494 494 494
 495 495 495 495 495 495 495 495 495 495 495 495 495 496 496 496 496 496
 496 496 496 496 496 496 496 496 497 497 497 497 497 497 497 497 497 497
 497 497 497 498 498 498 498 498 498 498 498 498 498 498 498 498 498 499
 499 499 499 499 499 499 499 499 499 499 499 499 499 499 499 500 500 500
 500 500 500 500 500 500 500 500 500 500 500 500 500 500 501 501 501 501
 501 501 501 501 501 501 501 501 501 501 501 501 501 501 502 502 502 502
 502 502 502 502 502 502 502 502 502 502 502 502 502 502 503 503 503 503
 503 503 503 503 503 503 503 503 503 503 503 503 503 503 504 504 504 504
 504 504 504 504 504 504 504 504 504 504 504 504 504 505 505 505 505 505
 505 505 505 505 505 505 505 505 505 505 505 506 506 506 506 506 506 506
 506 506 506 506 506 506 506 506 506 507 507 507 507 507 507 507 507 507
 507 507 507 508 508 508 508 508 508 508 508 508 508 508 509 509 509 509
 509 509 509 509 509 509 510 510 510 510 510 510 510 510 510 511 511 511
 511 511 511 512 512 512 512] [444 443 444 445 446 442 443 444 445 446 447 441 442 443 444 445 446 440
 441 442 443 444 445 439 440 441 442 443 444 438 439 440 441 442 443 437
 438 439 440 441 442 443 436 437 438 439 440 441 442 434 435 436 437 438
 439 440 441 432 433 434 435 436 437 438 439 440 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 425 426 427 428 429 430 431 432 433 434
 435 436 437 438 424 425 426 427 428 429 430 431 432 433 434 435 436 437
 424 425 426 427 428 429 430 431 432 433 434 435 436 423 424 425 426 427
 428 429 430 431 432 433 434 435 421 422 423 424 425 426 427 428 429 430
 431 432 433 419 420 421 422 423 424 425 426 427 428 429 430 431 432 417
 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 415 416 417
 418 419 420 421 422 423 424 425 426 427 428 429 430 431 414 415 416 417
 418 419 420 421 422 423 424 425 426 427 428 429 430 431 413 414 415 416
 417 418 419 420 421 422 423 424 425 426 427 428 429 430 413 414 415 416
 417 418 419 420 421 422 423 424 425 426 427 428 429 430 413 414 415 416
 417 418 419 420 421 422 423 424 425 426 427 428 429 414 415 416 417 418
 419 420 421 422 423 424 425 426 427 428 429 414 415 416 417 418 419 420
 421 422 423 424 425 426 427 428 429 417 418 419 420 421 422 423 424 425
 426 427 428 418 419 420 421 422 423 424 425 426 427 428 418 419 420 421
 422 423 424 425 426 427 419 420 421 422 423 424 425 426 427 421 422 423
 424 425 426 423 424 425 426]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 413 447 481 512
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 215262)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 21)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 61 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 62 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 63 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 64 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 65 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 66 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 67 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 68 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 69 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 70 (0, 133156)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 335548 3 336249 7 336951 9 337654 9 338356 11 339059 11 339761 12 340464 12 341166 13 341869 13 342572 13 343276 12 343979 12 344683 11 345387 10 346092 7 346798 3
--split_mask_rle--
 ['335548', '3', '336249', '7', '336951', '9', '337654', '9', '338356', '11', '339059', '11', '339761', '12', '340464', '12', '341166', '13', '341869', '13', '342572', '13', '343276', '12', '343979', '12', '344683', '11', '345387', '10', '346092', '7', '346798', '3']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 17 17
--mask_rle--> ls_starts, ls_lengths [335548 336249 336951 337654 338356 339059 339761 340464 341166 341869
 342572 343276 343979 344683 345387 346092 346798] [ 3  7  9  9 11 11 12 12 13 13 13 12 12 11 10  7  3]
--mask_rle--> ls_ends [335550 336255 336959 337662 338366 339069 339772 340475 341178 341881
 342584 343287 343990 344693 345396 346098 346800]
--mask_rle-->  LENGTH -- ls_ends 17
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365912    168]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365912    168]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   168 365912]
                                                                                                    
--coco_structure---ys, xs - [476 476 476 477 477 477 477 477 477 477 478 478 478 478 478 478 478 478
 478 479 479 479 479 479 479 479 479 479 480 480 480 480 480 480 480 480
 480 480 480 481 481 481 481 481 481 481 481 481 481 481 482 482 482 482
 482 482 482 482 482 482 482 482 483 483 483 483 483 483 483 483 483 483
 483 483 484 484 484 484 484 484 484 484 484 484 484 484 484 485 485 485
 485 485 485 485 485 485 485 485 485 485 486 486 486 486 486 486 486 486
 486 486 486 486 486 487 487 487 487 487 487 487 487 487 487 487 487 488
 488 488 488 488 488 488 488 488 488 488 488 489 489 489 489 489 489 489
 489 489 489 489 490 490 490 490 490 490 490 490 490 490 491 491 491 491
 491 491 491 492 492 492] [443 444 445 440 441 442 443 444 445 446 438 439 440 441 442 443 444 445
 446 437 438 439 440 441 442 443 444 445 435 436 437 438 439 440 441 442
 443 444 445 434 435 436 437 438 439 440 441 442 443 444 432 433 434 435
 436 437 438 439 440 441 442 443 431 432 433 434 435 436 437 438 439 440
 441 442 429 430 431 432 433 434 435 436 437 438 439 440 441 428 429 430
 431 432 433 434 435 436 437 438 439 440 427 428 429 430 431 432 433 434
 435 436 437 438 439 427 428 429 430 431 432 433 434 435 436 437 438 426
 427 428 429 430 431 432 433 434 435 436 437 426 427 428 429 430 431 432
 433 434 435 436 426 427 428 429 430 431 432 433 434 435 427 428 429 430
 431 432 433 429 430 431]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 426 446 476 492
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 222008)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 133681)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 337605 8 338307 9 339010 9 339713 10 340415 11 341118 11 341821 11 342524 11 343227 12 343931 11 344634 11 345338 11 346041 12 346745 11 347448 12 348152 12 348855 10 349559 4
--split_mask_rle--
 ['337605', '8', '338307', '9', '339010', '9', '339713', '10', '340415', '11', '341118', '11', '341821', '11', '342524', '11', '343227', '12', '343931', '11', '344634', '11', '345338', '11', '346041', '12', '346745', '11', '347448', '12', '348152', '12', '348855', '10', '349559', '4']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 18 18
--mask_rle--> ls_starts, ls_lengths [337605 338307 339010 339713 340415 341118 341821 342524 343227 343931
 344634 345338 346041 346745 347448 348152 348855 349559] [ 8  9  9 10 11 11 11 11 12 11 11 11 12 11 12 12 10  4]
--mask_rle--> ls_ends [337612 338315 339018 339722 340425 341128 341831 342534 343238 343941
 344644 345348 346052 346755 347459 348163 348864 349562]
--mask_rle-->  LENGTH -- ls_ends 18
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365894    186]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365894    186]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   186 365894]
                                                                                                    
--coco_structure---ys, xs - [479 479 479 479 479 479 479 479 480 480 480 480 480 480 480 480 480 481
 481 481 481 481 481 481 481 481 482 482 482 482 482 482 482 482 482 482
 483 483 483 483 483 483 483 483 483 483 483 484 484 484 484 484 484 484
 484 484 484 484 485 485 485 485 485 485 485 485 485 485 485 486 486 486
 486 486 486 486 486 486 486 486 487 487 487 487 487 487 487 487 487 487
 487 487 488 488 488 488 488 488 488 488 488 488 488 489 489 489 489 489
 489 489 489 489 489 489 490 490 490 490 490 490 490 490 490 490 490 491
 491 491 491 491 491 491 491 491 491 491 491 492 492 492 492 492 492 492
 492 492 492 492 493 493 493 493 493 493 493 493 493 493 493 493 494 494
 494 494 494 494 494 494 494 494 494 494 495 495 495 495 495 495 495 495
 495 495 496 496 496 496] [388 389 390 391 392 393 394 395 386 387 388 389 390 391 392 393 394 385
 386 387 388 389 390 391 392 393 384 385 386 387 388 389 390 391 392 393
 382 383 384 385 386 387 388 389 390 391 392 381 382 383 384 385 386 387
 388 389 390 391 380 381 382 383 384 385 386 387 388 389 390 379 380 381
 382 383 384 385 386 387 388 389 378 379 380 381 382 383 384 385 386 387
 388 389 378 379 380 381 382 383 384 385 386 387 388 377 378 379 380 381
 382 383 384 385 386 387 377 378 379 380 381 382 383 384 385 386 387 376
 377 378 379 380 381 382 383 384 385 386 387 376 377 378 379 380 381 382
 383 384 385 386 375 376 377 378 379 380 381 382 383 384 385 386 375 376
 377 378 379 380 381 382 383 384 385 386 374 375 376 377 378 379 380 381
 382 383 374 375 376 377]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 374 395 479 496
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 194975)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 160200)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 336909 8 337612 9 338316 10 339019 13 339722 18 340425 21 341129 20 341832 20 342535 19 343238 16 343941 14 344644 13 345347 12 346051 10 346755 8 347460 5 348164 3
--split_mask_rle--
 ['336909', '8', '337612', '9', '338316', '10', '339019', '13', '339722', '18', '340425', '21', '341129', '20', '341832', '20', '342535', '19', '343238', '16', '343941', '14', '344644', '13', '345347', '12', '346051', '10', '346755', '8', '347460', '5', '348164', '3']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 17 17
--mask_rle--> ls_starts, ls_lengths [336909 337612 338316 339019 339722 340425 341129 341832 342535 343238
 343941 344644 345347 346051 346755 347460 348164] [ 8  9 10 13 18 21 20 20 19 16 14 13 12 10  8  5  3]
--mask_rle--> ls_ends [336916 337620 338325 339031 339739 340445 341148 341851 342553 343253
 343954 344656 345358 346060 346762 347464 348166]
--mask_rle-->  LENGTH -- ls_ends 17
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365861    219]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365861    219]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   219 365861]
                                                                                                    
--coco_structure---ys, xs - [478 478 478 478 478 478 478 478 479 479 479 479 479 479 479 479 479 480
 480 480 480 480 480 480 480 480 480 481 481 481 481 481 481 481 481 481
 481 481 481 481 482 482 482 482 482 482 482 482 482 482 482 482 482 482
 482 482 482 482 483 483 483 483 483 483 483 483 483 483 483 483 483 483
 483 483 483 483 483 483 483 484 484 484 484 484 484 484 484 484 484 484
 484 484 484 484 484 484 484 484 484 485 485 485 485 485 485 485 485 485
 485 485 485 485 485 485 485 485 485 485 485 486 486 486 486 486 486 486
 486 486 486 486 486 486 486 486 486 486 486 486 487 487 487 487 487 487
 487 487 487 487 487 487 487 487 487 487 488 488 488 488 488 488 488 488
 488 488 488 488 488 488 489 489 489 489 489 489 489 489 489 489 489 489
 489 490 490 490 490 490 490 490 490 490 490 490 490 491 491 491 491 491
 491 491 491 491 491 492 492 492 492 492 492 492 492 493 493 493 493 493
 494 494 494] [396 397 398 399 400 401 402 403 395 396 397 398 399 400 401 402 403 395
 396 397 398 399 400 401 402 403 404 394 395 396 397 398 399 400 401 402
 403 404 405 406 393 394 395 396 397 398 399 400 401 402 403 404 405 406
 407 408 409 410 392 393 394 395 396 397 398 399 400 401 402 403 404 405
 406 407 408 409 410 411 412 392 393 394 395 396 397 398 399 400 401 402
 403 404 405 406 407 408 409 410 411 391 392 393 394 395 396 397 398 399
 400 401 402 403 404 405 406 407 408 409 410 390 391 392 393 394 395 396
 397 398 399 400 401 402 403 404 405 406 407 408 389 390 391 392 393 394
 395 396 397 398 399 400 401 402 403 404 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 387 388 389 390 391 392 393 394 395 396 397 398
 399 386 387 388 389 390 391 392 393 394 395 396 397 386 387 388 389 390
 391 392 393 394 395 386 387 388 389 390 391 392 393 387 388 389 390 391
 387 388 389]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 386 412 478 494
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 201210)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 151356)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 336455 5 337143 25 337845 29 338550 29 339255 30 339960 31 340665 34 341370 35 342075 33 342780 32 343487 28 344196 22 344904 17 345613 11
--split_mask_rle--
 ['336455', '5', '337143', '25', '337845', '29', '338550', '29', '339255', '30', '339960', '31', '340665', '34', '341370', '35', '342075', '33', '342780', '32', '343487', '28', '344196', '22', '344904', '17', '345613', '11']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 14 14
--mask_rle--> ls_starts, ls_lengths [336455 337143 337845 338550 339255 339960 340665 341370 342075 342780
 343487 344196 344904 345613] [ 5 25 29 29 30 31 34 35 33 32 28 22 17 11]
--mask_rle--> ls_ends [336459 337167 337873 338578 339284 339990 340698 341404 342107 342811
 343514 344217 344920 345623]
--mask_rle-->  LENGTH -- ls_ends 14
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365719    361]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365719    361]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   361 365719]
                                                                                                    
--coco_structure---ys, xs - [477 477 477 477 477 478 478 478 478 478 478 478 478 478 478 478 478 478
 478 478 478 478 478 478 478 478 478 478 478 478 479 479 479 479 479 479
 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479
 479 479 479 479 479 480 480 480 480 480 480 480 480 480 480 480 480 480
 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480 481 481
 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481
 481 481 481 481 481 481 481 481 481 481 482 482 482 482 482 482 482 482
 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482
 482 482 482 482 482 483 483 483 483 483 483 483 483 483 483 483 483 483
 483 483 483 483 483 483 483 483 483 483 483 483 483 483 483 483 483 483
 483 483 483 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484
 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484
 484 484 485 485 485 485 485 485 485 485 485 485 485 485 485 485 485 485
 485 485 485 485 485 485 485 485 485 485 485 485 485 485 485 485 485 486
 486 486 486 486 486 486 486 486 486 486 486 486 486 486 486 486 486 486
 486 486 486 486 486 486 486 486 486 486 486 486 486 487 487 487 487 487
 487 487 487 487 487 487 487 487 487 487 487 487 487 487 487 487 487 487
 487 487 487 487 487 488 488 488 488 488 488 488 488 488 488 488 488 488
 488 488 488 488 488 488 488 488 488 489 489 489 489 489 489 489 489 489
 489 489 489 489 489 489 489 489 490 490 490 490 490 490 490 490 490 490
 490] [646 647 648 649 650 630 631 632 633 634 635 636 637 638 639 640 641 642
 643 644 645 646 647 648 649 650 651 652 653 654 628 629 630 631 632 633
 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651
 652 653 654 655 656 629 630 631 632 633 634 635 636 637 638 639 640 641
 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 630 631
 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649
 650 651 652 653 654 655 656 657 658 659 631 632 633 634 635 636 637 638
 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656
 657 658 659 660 661 632 633 634 635 636 637 638 639 640 641 642 643 644
 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662
 663 664 665 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647
 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665
 666 667 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649
 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 635
 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653
 654 655 656 657 658 659 660 661 662 663 664 665 666 638 639 640 641 642
 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660
 661 662 663 664 665 643 644 645 646 647 648 649 650 651 652 653 654 655
 656 657 658 659 660 661 662 663 664 647 648 649 650 651 652 653 654 655
 656 657 658 659 660 661 662 663 652 653 654 655 656 657 658 659 660 661
 662]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 628 667 477 490
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 327039)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 519)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 61 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 62 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 63 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 64 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 65 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 66 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 67 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 68 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 69 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 70 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 71 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 72 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 73 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 74 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 75 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 76 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 77 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 78 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 79 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 80 (0, 18755)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 332126 3 332829 6 333532 7 334235 8 334938 9 335642 9 336345 10 337047 13 337749 15 338452 16 339156 16 339859 17 340563 16 341267 16 341971 15 342675 15 343381 13 344085 12 344790 11 345494 10 346198 10 346903 8 347607 8 348312 6 349016 5 349720 5 350425 3 351129 2
--split_mask_rle--
 ['332126', '3', '332829', '6', '333532', '7', '334235', '8', '334938', '9', '335642', '9', '336345', '10', '337047', '13', '337749', '15', '338452', '16', '339156', '16', '339859', '17', '340563', '16', '341267', '16', '341971', '15', '342675', '15', '343381', '13', '344085', '12', '344790', '11', '345494', '10', '346198', '10', '346903', '8', '347607', '8', '348312', '6', '349016', '5', '349720', '5', '350425', '3', '351129', '2']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 28 28
--mask_rle--> ls_starts, ls_lengths [332126 332829 333532 334235 334938 335642 336345 337047 337749 338452
 339156 339859 340563 341267 341971 342675 343381 344085 344790 345494
 346198 346903 347607 348312 349016 349720 350425 351129] [ 3  6  7  8  9  9 10 13 15 16 16 17 16 16 15 15 13 12 11 10 10  8  8  6
  5  5  3  2]
--mask_rle--> ls_ends [332128 332834 333538 334242 334946 335650 336354 337059 337763 338467
 339171 339875 340578 341282 341985 342689 343393 344096 344800 345503
 346207 346910 347614 348317 349020 349724 350427 351130]
--mask_rle-->  LENGTH -- ls_ends 28
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365796    284]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365796    284]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   284 365796]
                                                                                                    
--coco_structure---ys, xs - [471 471 471 472 472 472 472 472 472 473 473 473 473 473 473 473 474 474
 474 474 474 474 474 474 475 475 475 475 475 475 475 475 475 476 476 476
 476 476 476 476 476 476 477 477 477 477 477 477 477 477 477 477 478 478
 478 478 478 478 478 478 478 478 478 478 478 479 479 479 479 479 479 479
 479 479 479 479 479 479 479 479 480 480 480 480 480 480 480 480 480 480
 480 480 480 480 480 480 481 481 481 481 481 481 481 481 481 481 481 481
 481 481 481 481 482 482 482 482 482 482 482 482 482 482 482 482 482 482
 482 482 482 483 483 483 483 483 483 483 483 483 483 483 483 483 483 483
 483 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484 484 485
 485 485 485 485 485 485 485 485 485 485 485 485 485 485 486 486 486 486
 486 486 486 486 486 486 486 486 486 486 486 487 487 487 487 487 487 487
 487 487 487 487 487 487 488 488 488 488 488 488 488 488 488 488 488 488
 489 489 489 489 489 489 489 489 489 489 489 490 490 490 490 490 490 490
 490 490 490 491 491 491 491 491 491 491 491 491 491 492 492 492 492 492
 492 492 492 493 493 493 493 493 493 493 493 494 494 494 494 494 494 495
 495 495 495 495 496 496 496 496 496 497 497 497 498 498] [541 542 543 540 541 542 543 544 545 539 540 541 542 543 544 545 538 539
 540 541 542 543 544 545 537 538 539 540 541 542 543 544 545 537 538 539
 540 541 542 543 544 545 536 537 538 539 540 541 542 543 544 545 534 535
 536 537 538 539 540 541 542 543 544 545 546 532 533 534 535 536 537 538
 539 540 541 542 543 544 545 546 531 532 533 534 535 536 537 538 539 540
 541 542 543 544 545 546 531 532 533 534 535 536 537 538 539 540 541 542
 543 544 545 546 530 531 532 533 534 535 536 537 538 539 540 541 542 543
 544 545 546 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544
 545 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 530
 531 532 533 534 535 536 537 538 539 540 541 542 543 544 530 531 532 533
 534 535 536 537 538 539 540 541 542 543 544 532 533 534 535 536 537 538
 539 540 541 542 543 544 532 533 534 535 536 537 538 539 540 541 542 543
 533 534 535 536 537 538 539 540 541 542 543 533 534 535 536 537 538 539
 540 541 542 533 534 535 536 537 538 539 540 541 542 534 535 536 537 538
 539 540 541 534 535 536 537 538 539 540 541 535 536 537 538 539 540 535
 536 537 538 539 535 536 537 538 539 536 537 538 536 537]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 530 546 471 498
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 276082)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 495)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 495)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 495)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 21)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 81677)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 344816 8 345516 17 346216 23 346917 27 347619 29 348320 32 349022 33 349724 33 350426 33 351129 25 351833 15 352536 15 353240 8 353944 7 354648 6 355351 7 356055 7 356759 7 357463 8 358166 11 358870 13 359574 13 360278 14 360982 14 361686 13 362390 12 363094 8 363798 6
--split_mask_rle--
 ['344816', '8', '345516', '17', '346216', '23', '346917', '27', '347619', '29', '348320', '32', '349022', '33', '349724', '33', '350426', '33', '351129', '25', '351833', '15', '352536', '15', '353240', '8', '353944', '7', '354648', '6', '355351', '7', '356055', '7', '356759', '7', '357463', '8', '358166', '11', '358870', '13', '359574', '13', '360278', '14', '360982', '14', '361686', '13', '362390', '12', '363094', '8', '363798', '6']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 28 28
--mask_rle--> ls_starts, ls_lengths [344816 345516 346216 346917 347619 348320 349022 349724 350426 351129
 351833 352536 353240 353944 354648 355351 356055 356759 357463 358166
 358870 359574 360278 360982 361686 362390 363094 363798] [ 8 17 23 27 29 32 33 33 33 25 15 15  8  7  6  7  7  7  8 11 13 13 14 14
 13 12  8  6]
--mask_rle--> ls_ends [344823 345532 346238 346943 347647 348351 349054 349756 350458 351153
 351847 352550 353247 353950 354653 355357 356061 356765 357470 358176
 358882 359586 360291 360995 361698 362401 363101 363803]
--mask_rle-->  LENGTH -- ls_ends 28
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365636    444]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365636    444]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   444 365636]
                                                                                                    
--coco_structure---ys, xs - [489 489 489 489 489 489 489 489 490 490 490 490 490 490 490 490 490 490
 490 490 490 490 490 490 490 491 491 491 491 491 491 491 491 491 491 491
 491 491 491 491 491 491 491 491 491 491 491 491 492 492 492 492 492 492
 492 492 492 492 492 492 492 492 492 492 492 492 492 492 492 492 492 492
 492 492 492 493 493 493 493 493 493 493 493 493 493 493 493 493 493 493
 493 493 493 493 493 493 493 493 493 493 493 493 493 493 494 494 494 494
 494 494 494 494 494 494 494 494 494 494 494 494 494 494 494 494 494 494
 494 494 494 494 494 494 494 494 494 494 495 495 495 495 495 495 495 495
 495 495 495 495 495 495 495 495 495 495 495 495 495 495 495 495 495 495
 495 495 495 495 495 495 495 496 496 496 496 496 496 496 496 496 496 496
 496 496 496 496 496 496 496 496 496 496 496 496 496 496 496 496 496 496
 496 496 496 496 497 497 497 497 497 497 497 497 497 497 497 497 497 497
 497 497 497 497 497 497 497 497 497 497 497 497 497 497 497 497 497 497
 497 498 498 498 498 498 498 498 498 498 498 498 498 498 498 498 498 498
 498 498 498 498 498 498 498 498 499 499 499 499 499 499 499 499 499 499
 499 499 499 499 499 500 500 500 500 500 500 500 500 500 500 500 500 500
 500 500 501 501 501 501 501 501 501 501 502 502 502 502 502 502 502 503
 503 503 503 503 503 504 504 504 504 504 504 504 505 505 505 505 505 505
 505 506 506 506 506 506 506 506 507 507 507 507 507 507 507 507 508 508
 508 508 508 508 508 508 508 508 508 509 509 509 509 509 509 509 509 509
 509 509 509 509 510 510 510 510 510 510 510 510 510 510 510 510 510 511
 511 511 511 511 511 511 511 511 511 511 511 511 511 512 512 512 512 512
 512 512 512 512 512 512 512 512 512 513 513 513 513 513 513 513 513 513
 513 513 513 513 514 514 514 514 514 514 514 514 514 514 514 514 515 515
 515 515 515 515 515 515 516 516 516 516 516 516] [559 560 561 562 563 564 565 566 555 556 557 558 559 560 561 562 563 564
 565 566 567 568 569 570 571 551 552 553 554 555 556 557 558 559 560 561
 562 563 564 565 566 567 568 569 570 571 572 573 548 549 550 551 552 553
 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571
 572 573 574 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560
 561 562 563 564 565 566 567 568 569 570 571 572 573 574 543 544 545 546
 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564
 565 566 567 568 569 570 571 572 573 574 541 542 543 544 545 546 547 548
 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566
 567 568 569 570 571 572 573 539 540 541 542 543 544 545 546 547 548 549
 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567
 568 569 570 571 537 538 539 540 541 542 543 544 545 546 547 548 549 550
 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568
 569 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552
 553 554 555 556 557 558 559 560 536 537 538 539 540 541 542 543 544 545
 546 547 548 549 550 535 536 537 538 539 540 541 542 543 544 545 546 547
 548 549 535 536 537 538 539 540 541 542 535 536 537 538 539 540 541 535
 536 537 538 539 540 534 535 536 537 538 539 540 534 535 536 537 538 539
 540 534 535 536 537 538 539 540 534 535 536 537 538 539 540 541 533 534
 535 536 537 538 539 540 541 542 543 533 534 535 536 537 538 539 540 541
 542 543 544 545 533 534 535 536 537 538 539 540 541 542 543 544 545 533
 534 535 536 537 538 539 540 541 542 543 544 545 546 533 534 535 536 537
 538 539 540 541 542 543 544 545 546 533 534 535 536 537 538 539 540 541
 542 543 544 545 533 534 535 536 537 538 539 540 541 542 543 544 533 534
 535 536 537 538 539 540 533 534 535 536 537 538]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 533 574 489 516
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 277668)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 61 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 62 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 63 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 64 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 65 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 66 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 67 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 68 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 69 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 70 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 71 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 72 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 73 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 74 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 75 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 76 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 77 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 78 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 79 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 80 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 81 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 82 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 83 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 84 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 85 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 86 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 87 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 88 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 89 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 90 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 91 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 92 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 93 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 94 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 95 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 96 (0, 67105)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 307426 5 308130 6 308833 8 309537 9 310241 10 310945 10 311649 11 312354 11 313058 12 313762 13 314466 13 315171 13 315875 13 316579 13 317283 12 317988 11 318692 10 319396 9 320100 8 320805 7 321509 6 322213 5 322918 3
--split_mask_rle--
 ['307426', '5', '308130', '6', '308833', '8', '309537', '9', '310241', '10', '310945', '10', '311649', '11', '312354', '11', '313058', '12', '313762', '13', '314466', '13', '315171', '13', '315875', '13', '316579', '13', '317283', '12', '317988', '11', '318692', '10', '319396', '9', '320100', '8', '320805', '7', '321509', '6', '322213', '5', '322918', '3']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 23 23
--mask_rle--> ls_starts, ls_lengths [307426 308130 308833 309537 310241 310945 311649 312354 313058 313762
 314466 315171 315875 316579 317283 317988 318692 319396 320100 320805
 321509 322213 322918] [ 5  6  8  9 10 10 11 11 12 13 13 13 13 13 12 11 10  9  8  7  6  5  3]
--mask_rle--> ls_ends [307430 308135 308840 309545 310250 310954 311659 312364 313069 313774
 314478 315183 315887 316591 317294 317998 318701 319404 320107 320811
 321514 322217 322920]
--mask_rle-->  LENGTH -- ls_ends 23
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365862    218]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365862    218]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   218 365862]
                                                                                                    
--coco_structure---ys, xs - [436 436 436 436 436 437 437 437 437 437 437 438 438 438 438 438 438 438
 438 439 439 439 439 439 439 439 439 439 440 440 440 440 440 440 440 440
 440 440 441 441 441 441 441 441 441 441 441 441 442 442 442 442 442 442
 442 442 442 442 442 443 443 443 443 443 443 443 443 443 443 443 444 444
 444 444 444 444 444 444 444 444 444 444 445 445 445 445 445 445 445 445
 445 445 445 445 445 446 446 446 446 446 446 446 446 446 446 446 446 446
 447 447 447 447 447 447 447 447 447 447 447 447 447 448 448 448 448 448
 448 448 448 448 448 448 448 448 449 449 449 449 449 449 449 449 449 449
 449 449 449 450 450 450 450 450 450 450 450 450 450 450 450 451 451 451
 451 451 451 451 451 451 451 451 452 452 452 452 452 452 452 452 452 452
 453 453 453 453 453 453 453 453 453 454 454 454 454 454 454 454 454 455
 455 455 455 455 455 455 456 456 456 456 456 456 457 457 457 457 457 458
 458 458] [481 482 483 484 485 481 482 483 484 485 486 480 481 482 483 484 485 486
 487 480 481 482 483 484 485 486 487 488 480 481 482 483 484 485 486 487
 488 489 480 481 482 483 484 485 486 487 488 489 480 481 482 483 484 485
 486 487 488 489 490 481 482 483 484 485 486 487 488 489 490 491 481 482
 483 484 485 486 487 488 489 490 491 492 481 482 483 484 485 486 487 488
 489 490 491 492 493 481 482 483 484 485 486 487 488 489 490 491 492 493
 482 483 484 485 486 487 488 489 490 491 492 493 494 482 483 484 485 486
 487 488 489 490 491 492 493 494 482 483 484 485 486 487 488 489 490 491
 492 493 494 482 483 484 485 486 487 488 489 490 491 492 493 483 484 485
 486 487 488 489 490 491 492 493 483 484 485 486 487 488 489 490 491 492
 483 484 485 486 487 488 489 490 491 483 484 485 486 487 488 489 490 484
 485 486 487 488 489 490 484 485 486 487 488 489 484 485 486 487 488 485
 486 487]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 480 494 436 458
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 250038)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 21)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 108750)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 70316 2 71017 6 71718 10 72420 14 73121 18 73822 22 74524 25 75228 26 75932 26 76636 27 77340 27 78044 27 78748 28 79451 29 80155 29 80859 2 80880 8 81588 5 82296 1
--split_mask_rle--
 ['70316', '2', '71017', '6', '71718', '10', '72420', '14', '73121', '18', '73822', '22', '74524', '25', '75228', '26', '75932', '26', '76636', '27', '77340', '27', '78044', '27', '78748', '28', '79451', '29', '80155', '29', '80859', '2', '80880', '8', '81588', '5', '82296', '1']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 19 19
--mask_rle--> ls_starts, ls_lengths [70316 71017 71718 72420 73121 73822 74524 75228 75932 76636 77340 78044
 78748 79451 80155 80859 80880 81588 82296] [ 2  6 10 14 18 22 25 26 26 27 27 27 28 29 29  2  8  5  1]
--mask_rle--> ls_ends [70317 71022 71727 72433 73138 73843 74548 75253 75957 76662 77366 78070
 78775 79479 80183 80860 80887 81592 82296]
--mask_rle-->  LENGTH -- ls_ends 19
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365748    332]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365748    332]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   332 365748]
                                                                                                    
--coco_structure---ys, xs - [ 99  99 100 100 100 100 100 100 101 101 101 101 101 101 101 101 101 101
 102 102 102 102 102 102 102 102 102 102 102 102 102 102 103 103 103 103
 103 103 103 103 103 103 103 103 103 103 103 103 103 103 104 104 104 104
 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104
 105 105 105 105 105 105 105 105 105 105 105 105 105 105 105 105 105 105
 105 105 105 105 105 105 105 106 106 106 106 106 106 106 106 106 106 106
 106 106 106 106 106 106 106 106 106 106 106 106 106 106 106 107 107 107
 107 107 107 107 107 107 107 107 107 107 107 107 107 107 107 107 107 107
 107 107 107 107 107 108 108 108 108 108 108 108 108 108 108 108 108 108
 108 108 108 108 108 108 108 108 108 108 108 108 108 108 109 109 109 109
 109 109 109 109 109 109 109 109 109 109 109 109 109 109 109 109 109 109
 109 109 109 109 109 110 110 110 110 110 110 110 110 110 110 110 110 110
 110 110 110 110 110 110 110 110 110 110 110 110 110 110 111 111 111 111
 111 111 111 111 111 111 111 111 111 111 111 111 111 111 111 111 111 111
 111 111 111 111 111 111 112 112 112 112 112 112 112 112 112 112 112 112
 112 112 112 112 112 112 112 112 112 112 112 112 112 112 112 112 112 113
 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113
 113 113 113 113 113 113 113 113 113 113 114 114 114 114 114 114 114 114
 114 114 115 115 115 115 115 116] [619 620 616 617 618 619 620 621 613 614 615 616 617 618 619 620 621 622
 611 612 613 614 615 616 617 618 619 620 621 622 623 624 608 609 610 611
 612 613 614 615 616 617 618 619 620 621 622 623 624 625 605 606 607 608
 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626
 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620
 621 622 623 624 625 626 627 603 604 605 606 607 608 609 610 611 612 613
 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 603 604 605
 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623
 624 625 626 627 628 603 604 605 606 607 608 609 610 611 612 613 614 615
 616 617 618 619 620 621 622 623 624 625 626 627 628 629 603 604 605 606
 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624
 625 626 627 628 629 603 604 605 606 607 608 609 610 611 612 613 614 615
 616 617 618 619 620 621 622 623 624 625 626 627 628 629 603 604 605 606
 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624
 625 626 627 628 629 630 602 603 604 605 606 607 608 609 610 611 612 613
 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 602
 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620
 621 622 623 624 625 626 627 628 629 630 602 603 623 624 625 626 627 628
 629 630 627 628 629 630 631 631]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 602 631 99 116
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 313152)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 519)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 37843)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 247001 4 247704 7 248408 9 249111 16 249815 17 250520 18 251224 19 251929 19 252633 20 253338 19 254042 18 254746 18 255450 18 256154 17 256858 17 257562 16 258265 17 258969 17 259672 17 260376 17 261080 9 261783 9 262487 7 263190 7 263894 6 264600 2
--split_mask_rle--
 ['247001', '4', '247704', '7', '248408', '9', '249111', '16', '249815', '17', '250520', '18', '251224', '19', '251929', '19', '252633', '20', '253338', '19', '254042', '18', '254746', '18', '255450', '18', '256154', '17', '256858', '17', '257562', '16', '258265', '17', '258969', '17', '259672', '17', '260376', '17', '261080', '9', '261783', '9', '262487', '7', '263190', '7', '263894', '6', '264600', '2']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 26 26
--mask_rle--> ls_starts, ls_lengths [247001 247704 248408 249111 249815 250520 251224 251929 252633 253338
 254042 254746 255450 256154 256858 257562 258265 258969 259672 260376
 261080 261783 262487 263190 263894 264600] [ 4  7  9 16 17 18 19 19 20 19 18 18 18 17 17 16 17 17 17 17  9  9  7  7
  6  2]
--mask_rle--> ls_ends [247004 247710 248416 249126 249831 250537 251242 251947 252652 253356
 254059 254763 255467 256170 256874 257577 258281 258985 259688 260392
 261088 261791 262493 263196 263899 264601]
--mask_rle-->  LENGTH -- ls_ends 26
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365720    360]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365720    360]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   360 365720]
                                                                                                    
--coco_structure---ys, xs - [350 350 350 350 351 351 351 351 351 351 351 352 352 352 352 352 352 352
 352 352 353 353 353 353 353 353 353 353 353 353 353 353 353 353 353 353
 354 354 354 354 354 354 354 354 354 354 354 354 354 354 354 354 354 355
 355 355 355 355 355 355 355 355 355 355 355 355 355 355 355 355 355 356
 356 356 356 356 356 356 356 356 356 356 356 356 356 356 356 356 356 356
 357 357 357 357 357 357 357 357 357 357 357 357 357 357 357 357 357 357
 357 358 358 358 358 358 358 358 358 358 358 358 358 358 358 358 358 358
 358 358 358 359 359 359 359 359 359 359 359 359 359 359 359 359 359 359
 359 359 359 359 360 360 360 360 360 360 360 360 360 360 360 360 360 360
 360 360 360 360 361 361 361 361 361 361 361 361 361 361 361 361 361 361
 361 361 361 361 362 362 362 362 362 362 362 362 362 362 362 362 362 362
 362 362 362 362 363 363 363 363 363 363 363 363 363 363 363 363 363 363
 363 363 363 364 364 364 364 364 364 364 364 364 364 364 364 364 364 364
 364 364 365 365 365 365 365 365 365 365 365 365 365 365 365 365 365 365
 366 366 366 366 366 366 366 366 366 366 366 366 366 366 366 366 366 367
 367 367 367 367 367 367 367 367 367 367 367 367 367 367 367 367 368 368
 368 368 368 368 368 368 368 368 368 368 368 368 368 368 368 369 369 369
 369 369 369 369 369 369 369 369 369 369 369 369 369 369 370 370 370 370
 370 370 370 370 370 371 371 371 371 371 371 371 371 371 372 372 372 372
 372 372 372 373 373 373 373 373 373 373 374 374 374 374 374 374 375 375] [600 601 602 603 599 600 601 602 603 604 605 599 600 601 602 603 604 605
 606 607 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613
 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 599
 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 599
 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617
 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617
 618 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616
 617 618 619 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615
 616 617 618 619 601 602 603 604 605 606 607 608 609 610 611 612 613 614
 615 616 617 618 601 602 603 604 605 606 607 608 609 610 611 612 613 614
 615 616 617 618 601 602 603 604 605 606 607 608 609 610 611 612 613 614
 615 616 617 618 601 602 603 604 605 606 607 608 609 610 611 612 613 614
 615 616 617 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615
 616 617 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616
 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 600
 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 599 600
 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 599 600 601
 602 603 604 605 606 607 608 609 610 611 612 613 614 615 599 600 601 602
 603 604 605 606 607 598 599 600 601 602 603 604 605 606 598 599 600 601
 602 603 604 597 598 599 600 601 602 603 597 598 599 600 601 602 599 600]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 597 619 350 375
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 310813)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 494)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 494)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 495)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 495)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 21)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 43840)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 4561 2 5262 7 5964 10 6667 12 7371 12 8075 12 8779 12 9483 12 10187 12 10892 10 11598 6
--split_mask_rle--
 ['4561', '2', '5262', '7', '5964', '10', '6667', '12', '7371', '12', '8075', '12', '8779', '12', '9483', '12', '10187', '12', '10892', '10', '11598', '6']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 11 11
--mask_rle--> ls_starts, ls_lengths [ 4561  5262  5964  6667  7371  8075  8779  9483 10187 10892 11598] [ 2  7 10 12 12 12 12 12 12 10  6]
--mask_rle--> ls_ends [ 4562  5268  5973  6678  7382  8086  8790  9494 10198 10901 11603]
--mask_rle-->  LENGTH -- ls_ends 11
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365973    107]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365973    107]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   107 365973]
                                                                                                    
--coco_structure---ys, xs - [ 6  6  7  7  7  7  7  7  7  8  8  8  8  8  8  8  8  8  8  9  9  9  9  9
  9  9  9  9  9  9  9 10 10 10 10 10 10 10 10 10 10 10 10 11 11 11 11 11
 11 11 11 11 11 11 11 12 12 12 12 12 12 12 12 12 12 12 12 13 13 13 13 13
 13 13 13 13 13 13 13 14 14 14 14 14 14 14 14 14 14 14 14 15 15 15 15 15
 15 15 15 15 15 16 16 16 16 16 16] [336 337 333 334 335 336 337 338 339 331 332 333 334 335 336 337 338 339
 340 330 331 332 333 334 335 336 337 338 339 340 341 330 331 332 333 334
 335 336 337 338 339 340 341 330 331 332 333 334 335 336 337 338 339 340
 341 330 331 332 333 334 335 336 337 338 339 340 341 330 331 332 333 334
 335 336 337 338 339 340 341 330 331 332 333 334 335 336 337 338 339 340
 341 331 332 333 334 335 336 337 338 339 340 333 334 335 336 337 338]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 330 341 6 16
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 171609)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 188745)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 160898 13 161601 13 162305 13 163010 11 163715 10 164419 9 165124 8 165829 6 166534 5 167238 4 167943 3 168648 1
--split_mask_rle--
 ['160898', '13', '161601', '13', '162305', '13', '163010', '11', '163715', '10', '164419', '9', '165124', '8', '165829', '6', '166534', '5', '167238', '4', '167943', '3', '168648', '1']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 12 12
--mask_rle--> ls_starts, ls_lengths [160898 161601 162305 163010 163715 164419 165124 165829 166534 167238
 167943 168648] [13 13 13 11 10  9  8  6  5  4  3  1]
--mask_rle--> ls_ends [160910 161613 162317 163020 163724 164427 165131 165834 166538 167241
 167945 168648]
--mask_rle-->  LENGTH -- ls_ends 12
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365984     96]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365984     96]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [    96 365984]
                                                                                                    
--coco_structure---ys, xs - [228 228 228 228 228 228 228 228 228 228 228 228 228 229 229 229 229 229
 229 229 229 229 229 229 229 229 230 230 230 230 230 230 230 230 230 230
 230 230 230 231 231 231 231 231 231 231 231 231 231 231 232 232 232 232
 232 232 232 232 232 232 233 233 233 233 233 233 233 233 233 234 234 234
 234 234 234 234 234 235 235 235 235 235 235 236 236 236 236 236 237 237
 237 237 238 238 238 239] [385 386 387 388 389 390 391 392 393 394 395 396 397 384 385 386 387 388
 389 390 391 392 393 394 395 396 384 385 386 387 388 389 390 391 392 393
 394 395 396 385 386 387 388 389 390 391 392 393 394 395 386 387 388 389
 390 391 392 393 394 395 386 387 388 389 390 391 392 393 394 387 388 389
 390 391 392 393 394 388 389 390 391 392 393 389 390 391 392 393 389 390
 391 392 390 391 392 391]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 384 397 228 239
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 199909)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 159411)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 357341 5 358041 10 358742 15 359442 20 360144 23 360846 26 361548 27 362255 23 362963 18 363669 15 364374 13 365080 10 365785 8
--split_mask_rle--
 ['357341', '5', '358041', '10', '358742', '15', '359442', '20', '360144', '23', '360846', '26', '361548', '27', '362255', '23', '362963', '18', '363669', '15', '364374', '13', '365080', '10', '365785', '8']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 13 13
--mask_rle--> ls_starts, ls_lengths [357341 358041 358742 359442 360144 360846 361548 362255 362963 363669
 364374 365080 365785] [ 5 10 15 20 23 26 27 23 18 15 13 10  8]
--mask_rle--> ls_ends [357345 358050 358756 359461 360166 360871 361574 362277 362980 363683
 364386 365089 365792]
--mask_rle-->  LENGTH -- ls_ends 13
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365867    213]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365867    213]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   213 365867]
                                                                                                    
--coco_structure---ys, xs - [507 507 507 507 507 508 508 508 508 508 508 508 508 508 508 509 509 509
 509 509 509 509 509 509 509 509 509 509 509 509 510 510 510 510 510 510
 510 510 510 510 510 510 510 510 510 510 510 510 510 510 511 511 511 511
 511 511 511 511 511 511 511 511 511 511 511 511 511 511 511 511 511 511
 511 512 512 512 512 512 512 512 512 512 512 512 512 512 512 512 512 512
 512 512 512 512 512 512 512 512 512 513 513 513 513 513 513 513 513 513
 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513
 514 514 514 514 514 514 514 514 514 514 514 514 514 514 514 514 514 514
 514 514 514 514 514 515 515 515 515 515 515 515 515 515 515 515 515 515
 515 515 515 515 515 516 516 516 516 516 516 516 516 516 516 516 516 516
 516 516 517 517 517 517 517 517 517 517 517 517 517 517 517 518 518 518
 518 518 518 518 518 518 518 519 519 519 519 519 519 519 519] [412 413 414 415 416 408 409 410 411 412 413 414 415 416 417 405 406 407
 408 409 410 411 412 413 414 415 416 417 418 419 401 402 403 404 405 406
 407 408 409 410 411 412 413 414 415 416 417 418 419 420 399 400 401 402
 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420
 421 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 395 396 397 398 399 400 401 402 403
 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421
 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415
 416 417 418 419 420 402 403 404 405 406 407 408 409 410 411 412 413 414
 415 416 417 418 419 404 405 406 407 408 409 410 411 412 413 414 415 416
 417 418 405 406 407 408 409 410 411 412 413 414 415 416 417 407 408 409
 410 411 412 413 414 415 416 408 409 410 411 412 413 414 415]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 395 422 507 519
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 205913)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 519)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 146127)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 328689 3 329391 8 330094 19 330796 25 331497 30 332201 30 332905 31 333612 28 334319 26 335025 27 335730 26 336435 25 337140 19
--split_mask_rle--
 ['328689', '3', '329391', '8', '330094', '19', '330796', '25', '331497', '30', '332201', '30', '332905', '31', '333612', '28', '334319', '26', '335025', '27', '335730', '26', '336435', '25', '337140', '19']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 13 13
--mask_rle--> ls_starts, ls_lengths [328689 329391 330094 330796 331497 332201 332905 333612 334319 335025
 335730 336435 337140] [ 3  8 19 25 30 30 31 28 26 27 26 25 19]
--mask_rle--> ls_ends [328691 329398 330112 330820 331526 332230 332935 333639 334344 335051
 335755 336459 337158]
--mask_rle-->  LENGTH -- ls_ends 13
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365783    297]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365783    297]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   297 365783]
                                                                                                    
--coco_structure---ys, xs - [466 466 466 467 467 467 467 467 467 467 467 468 468 468 468 468 468 468
 468 468 468 468 468 468 468 468 468 468 468 468 469 469 469 469 469 469
 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469
 469 470 470 470 470 470 470 470 470 470 470 470 470 470 470 470 470 470
 470 470 470 470 470 470 470 470 470 470 470 470 470 471 471 471 471 471
 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471
 471 471 471 471 471 471 471 472 472 472 472 472 472 472 472 472 472 472
 472 472 472 472 472 472 472 472 472 472 472 472 472 472 472 472 472 472
 472 472 473 473 473 473 473 473 473 473 473 473 473 473 473 473 473 473
 473 473 473 473 473 473 473 473 473 473 473 473 474 474 474 474 474 474
 474 474 474 474 474 474 474 474 474 474 474 474 474 474 474 474 474 474
 474 474 475 475 475 475 475 475 475 475 475 475 475 475 475 475 475 475
 475 475 475 475 475 475 475 475 475 475 475 476 476 476 476 476 476 476
 476 476 476 476 476 476 476 476 476 476 476 476 476 476 476 476 476 476
 476 477 477 477 477 477 477 477 477 477 477 477 477 477 477 477 477 477
 477 477 477 477 477 477 477 477 478 478 478 478 478 478 478 478 478 478
 478 478 478 478 478 478 478 478 478] [624 625 626 622 623 624 625 626 627 628 629 621 622 623 624 625 626 627
 628 629 630 631 632 633 634 635 636 637 638 639 619 620 621 622 623 624
 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642
 643 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632
 633 634 635 636 637 638 639 640 641 642 643 644 645 616 617 618 619 620
 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638
 639 640 641 642 643 644 645 616 617 618 619 620 621 622 623 624 625 626
 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644
 645 646 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634
 635 636 637 638 639 640 641 642 643 644 645 646 622 623 624 625 626 627
 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645
 646 647 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639
 640 641 642 643 644 645 646 647 648 649 650 625 626 627 628 629 630 631
 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649
 650 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642
 643 644 645 646 647 648 649 650 627 628 629 630 631 632 633 634 635 636
 637 638 639 640 641 642 643 644 645]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 616 650 466 478
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 320790)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 61 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 62 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 63 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 64 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 65 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 66 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 67 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 68 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 69 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 70 (0, 27602)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 284365 5 285066 9 285765 14 286467 16 287167 19 287868 22 288570 23 289273 24 289978 22 290683 20 291388 18 292094 15 292802 10 293510 4
--split_mask_rle--
 ['284365', '5', '285066', '9', '285765', '14', '286467', '16', '287167', '19', '287868', '22', '288570', '23', '289273', '24', '289978', '22', '290683', '20', '291388', '18', '292094', '15', '292802', '10', '293510', '4']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 14 14
--mask_rle--> ls_starts, ls_lengths [284365 285066 285765 286467 287167 287868 288570 289273 289978 290683
 291388 292094 292802 293510] [ 5  9 14 16 19 22 23 24 22 20 18 15 10  4]
--mask_rle--> ls_ends [284369 285074 285778 286482 287185 287889 288592 289296 289999 290702
 291405 292108 292811 293513]
--mask_rle-->  LENGTH -- ls_ends 14
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365859    221]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365859    221]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   221 365859]
                                                                                                    
--coco_structure---ys, xs - [403 403 403 403 403 404 404 404 404 404 404 404 404 404 405 405 405 405
 405 405 405 405 405 405 405 405 405 405 406 406 406 406 406 406 406 406
 406 406 406 406 406 406 406 406 407 407 407 407 407 407 407 407 407 407
 407 407 407 407 407 407 407 407 407 408 408 408 408 408 408 408 408 408
 408 408 408 408 408 408 408 408 408 408 408 408 408 409 409 409 409 409
 409 409 409 409 409 409 409 409 409 409 409 409 409 409 409 409 409 409
 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410
 410 410 410 410 410 410 411 411 411 411 411 411 411 411 411 411 411 411
 411 411 411 411 411 411 411 411 411 411 412 412 412 412 412 412 412 412
 412 412 412 412 412 412 412 412 412 412 412 412 413 413 413 413 413 413
 413 413 413 413 413 413 413 413 413 413 413 413 414 414 414 414 414 414
 414 414 414 414 414 414 414 414 414 415 415 415 415 415 415 415 415 415
 415 416 416 416 416] [652 653 654 655 656 649 650 651 652 653 654 655 656 657 644 645 646 647
 648 649 650 651 652 653 654 655 656 657 642 643 644 645 646 647 648 649
 650 651 652 653 654 655 656 657 638 639 640 641 642 643 644 645 646 647
 648 649 650 651 652 653 654 655 656 635 636 637 638 639 640 641 642 643
 644 645 646 647 648 649 650 651 652 653 654 655 656 633 634 635 636 637
 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655
 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649
 650 651 652 653 654 655 633 634 635 636 637 638 639 640 641 642 643 644
 645 646 647 648 649 650 651 652 653 654 634 635 636 637 638 639 640 641
 642 643 644 645 646 647 648 649 650 651 652 653 635 636 637 638 639 640
 641 642 643 644 645 646 647 648 649 650 651 652 637 638 639 640 641 642
 643 644 645 646 647 648 649 650 651 641 642 643 644 645 646 647 648 649
 650 645 646 647 648]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 632 657 403 416
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 329050)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 24033)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 283617 1 284320 3 285024 13 285728 14 286432 14 287137 14 287841 15 288545 16 289248 17 289952 18 290655 19 291359 19 292062 20 292767 18 293473 14 294183 6
--split_mask_rle--
 ['283617', '1', '284320', '3', '285024', '13', '285728', '14', '286432', '14', '287137', '14', '287841', '15', '288545', '16', '289248', '17', '289952', '18', '290655', '19', '291359', '19', '292062', '20', '292767', '18', '293473', '14', '294183', '6']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 16 16
--mask_rle--> ls_starts, ls_lengths [283617 284320 285024 285728 286432 287137 287841 288545 289248 289952
 290655 291359 292062 292767 293473 294183] [ 1  3 13 14 14 14 15 16 17 18 19 19 20 18 14  6]
--mask_rle--> ls_ends [283617 284322 285036 285741 286445 287150 287855 288560 289264 289969
 290673 291377 292081 292784 293486 294188]
--mask_rle-->  LENGTH -- ls_ends 16
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365859    221]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365859    221]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   221 365859]
                                                                                                    
--coco_structure---ys, xs - [402 403 403 403 404 404 404 404 404 404 404 404 404 404 404 404 404 405
 405 405 405 405 405 405 405 405 405 405 405 405 405 406 406 406 406 406
 406 406 406 406 406 406 406 406 406 407 407 407 407 407 407 407 407 407
 407 407 407 407 407 408 408 408 408 408 408 408 408 408 408 408 408 408
 408 408 409 409 409 409 409 409 409 409 409 409 409 409 409 409 409 409
 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410 411
 411 411 411 411 411 411 411 411 411 411 411 411 411 411 411 411 411 412
 412 412 412 412 412 412 412 412 412 412 412 412 412 412 412 412 412 412
 413 413 413 413 413 413 413 413 413 413 413 413 413 413 413 413 413 413
 413 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414 414
 414 414 414 415 415 415 415 415 415 415 415 415 415 415 415 415 415 415
 415 415 415 416 416 416 416 416 416 416 416 416 416 416 416 416 416 417
 417 417 417 417 417] [608 607 608 609 607 608 609 610 611 612 613 614 615 616 617 618 619 607
 608 609 610 611 612 613 614 615 616 617 618 619 620 607 608 609 610 611
 612 613 614 615 616 617 618 619 620 608 609 610 611 612 613 614 615 616
 617 618 619 620 621 608 609 610 611 612 613 614 615 616 617 618 619 620
 621 622 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623
 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 607
 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 606
 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624
 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623
 624 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621
 622 623 624 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620
 621 622 623 608 609 610 611 612 613 614 615 616 617 618 619 620 621 614
 615 616 617 618 619]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 605 624 402 417
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 315014)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 41185)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 308149 11 308853 13 309557 14 310261 15 310965 16 311669 18 312373 19 313078 19 313783 19 314489 17 315195 15 315902 6 316608 2
--split_mask_rle--
 ['308149', '11', '308853', '13', '309557', '14', '310261', '15', '310965', '16', '311669', '18', '312373', '19', '313078', '19', '313783', '19', '314489', '17', '315195', '15', '315902', '6', '316608', '2']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 13 13
--mask_rle--> ls_starts, ls_lengths [308149 308853 309557 310261 310965 311669 312373 313078 313783 314489
 315195 315902 316608] [11 13 14 15 16 18 19 19 19 17 15  6  2]
--mask_rle--> ls_ends [308159 308865 309570 310275 310980 311686 312391 313096 313801 314505
 315209 315907 316609]
--mask_rle-->  LENGTH -- ls_ends 13
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365896    184]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365896    184]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   184 365896]
                                                                                                    
--coco_structure---ys, xs - [437 437 437 437 437 437 437 437 437 437 437 438 438 438 438 438 438 438
 438 438 438 438 438 438 439 439 439 439 439 439 439 439 439 439 439 439
 439 439 440 440 440 440 440 440 440 440 440 440 440 440 440 440 440 441
 441 441 441 441 441 441 441 441 441 441 441 441 441 441 441 442 442 442
 442 442 442 442 442 442 442 442 442 442 442 442 442 442 442 443 443 443
 443 443 443 443 443 443 443 443 443 443 443 443 443 443 443 443 444 444
 444 444 444 444 444 444 444 444 444 444 444 444 444 444 444 444 444 445
 445 445 445 445 445 445 445 445 445 445 445 445 445 445 445 445 445 445
 446 446 446 446 446 446 446 446 446 446 446 446 446 446 446 446 446 447
 447 447 447 447 447 447 447 447 447 447 447 447 447 447 448 448 448 448
 448 448 449 449] [500 501 502 503 504 505 506 507 508 509 510 500 501 502 503 504 505 506
 507 508 509 510 511 512 500 501 502 503 504 505 506 507 508 509 510 511
 512 513 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 500
 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 500 501 502
 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 500 501 502
 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 501 502
 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 502
 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520
 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 506
 507 508 509 510 511 512 513 514 515 516 517 518 519 520 509 510 511 512
 513 514 511 512]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 500 520 437 449
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 260437)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 95232)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 327252 2 327954 5 328655 9 329357 12 330059 15 330764 15 331469 16 332173 19 332878 21 333583 24 334288 26 334992 29 335697 31 336402 32 337107 33 337811 34 338516 34 339221 34 339926 33 340631 20 340658 4 341337 10 342042 4
--split_mask_rle--
 ['327252', '2', '327954', '5', '328655', '9', '329357', '12', '330059', '15', '330764', '15', '331469', '16', '332173', '19', '332878', '21', '333583', '24', '334288', '26', '334992', '29', '335697', '31', '336402', '32', '337107', '33', '337811', '34', '338516', '34', '339221', '34', '339926', '33', '340631', '20', '340658', '4', '341337', '10', '342042', '4']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 23 23
--mask_rle--> ls_starts, ls_lengths [327252 327954 328655 329357 330059 330764 331469 332173 332878 333583
 334288 334992 335697 336402 337107 337811 338516 339221 339926 340631
 340658 341337 342042] [ 2  5  9 12 15 15 16 19 21 24 26 29 31 32 33 34 34 34 33 20  4 10  4]
--mask_rle--> ls_ends [327253 327958 328663 329368 330073 330778 331484 332191 332898 333606
 334313 335020 335727 336433 337139 337844 338549 339254 339958 340650
 340661 341346 342045]
--mask_rle-->  LENGTH -- ls_ends 23
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365618    462]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365618    462]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   462 365618]
                                                                                                    
--coco_structure---ys, xs - [464 464 465 465 465 465 465 466 466 466 466 466 466 466 466 466 467 467
 467 467 467 467 467 467 467 467 467 467 468 468 468 468 468 468 468 468
 468 468 468 468 468 468 468 469 469 469 469 469 469 469 469 469 469 469
 469 469 469 469 470 470 470 470 470 470 470 470 470 470 470 470 470 470
 470 470 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471
 471 471 471 472 472 472 472 472 472 472 472 472 472 472 472 472 472 472
 472 472 472 472 472 472 473 473 473 473 473 473 473 473 473 473 473 473
 473 473 473 473 473 473 473 473 473 473 473 473 474 474 474 474 474 474
 474 474 474 474 474 474 474 474 474 474 474 474 474 474 474 474 474 474
 474 474 475 475 475 475 475 475 475 475 475 475 475 475 475 475 475 475
 475 475 475 475 475 475 475 475 475 475 475 475 475 476 476 476 476 476
 476 476 476 476 476 476 476 476 476 476 476 476 476 476 476 476 476 476
 476 476 476 476 476 476 476 476 477 477 477 477 477 477 477 477 477 477
 477 477 477 477 477 477 477 477 477 477 477 477 477 477 477 477 477 477
 477 477 477 477 478 478 478 478 478 478 478 478 478 478 478 478 478 478
 478 478 478 478 478 478 478 478 478 478 478 478 478 478 478 478 478 478
 478 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479
 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479 479 480
 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480
 480 480 480 480 480 480 480 480 480 480 480 480 480 480 480 481 481 481
 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481 481
 481 481 481 481 481 481 481 481 481 481 481 481 481 482 482 482 482 482
 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482 482
 482 482 482 482 482 482 482 482 482 482 483 483 483 483 483 483 483 483
 483 483 483 483 483 483 483 483 483 483 483 483 483 483 483 483 484 484
 484 484 484 484 484 484 484 484 485 485 485 485] [595 596 593 594 595 596 597 590 591 592 593 594 595 596 597 598 588 589
 590 591 592 593 594 595 596 597 598 599 586 587 588 589 590 591 592 593
 594 595 596 597 598 599 600 587 588 589 590 591 592 593 594 595 596 597
 598 599 600 601 588 589 590 591 592 593 594 595 596 597 598 599 600 601
 602 603 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603
 604 605 606 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603
 604 605 606 607 608 609 590 591 592 593 594 595 596 597 598 599 600 601
 602 603 604 605 606 607 608 609 610 611 612 613 591 592 593 594 595 596
 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614
 615 616 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606
 607 608 609 610 611 612 613 614 615 616 617 618 619 592 593 594 595 596
 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614
 615 616 617 618 619 620 621 622 593 594 595 596 597 598 599 600 601 602
 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620
 621 622 623 624 594 595 596 597 598 599 600 601 602 603 604 605 606 607
 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625
 626 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610
 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 595
 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613
 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 596 597 598
 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616
 617 618 619 620 621 622 623 624 625 626 627 628 629 597 598 599 600 601
 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619
 620 621 622 623 624 625 626 627 628 629 598 599 600 601 602 603 604 605
 606 607 608 609 610 611 612 613 614 615 616 617 625 626 627 628 600 601
 602 603 604 605 606 607 608 609 601 602 603 604]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 586 629 464 485
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 305188)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 519)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 61 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 62 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 63 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 64 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 65 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 66 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 67 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 68 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 69 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 70 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 71 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 72 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 73 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 74 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 75 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 76 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 77 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 78 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 79 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 80 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 81 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 82 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 83 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 84 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 85 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 86 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 87 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 88 (0, 38517)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 318091 8 318793 11 319495 14 320197 17 320900 19 321602 22 322304 25 323007 27 323709 28 324412 26 325117 22 325835 4
--split_mask_rle--
 ['318091', '8', '318793', '11', '319495', '14', '320197', '17', '320900', '19', '321602', '22', '322304', '25', '323007', '27', '323709', '28', '324412', '26', '325117', '22', '325835', '4']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 12 12
--mask_rle--> ls_starts, ls_lengths [318091 318793 319495 320197 320900 321602 322304 323007 323709 324412
 325117 325835] [ 8 11 14 17 19 22 25 27 28 26 22  4]
--mask_rle--> ls_ends [318098 318803 319508 320213 320918 321623 322328 323033 323736 324437
 325138 325838]
--mask_rle-->  LENGTH -- ls_ends 12
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365857    223]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365857    223]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   223 365857]
                                                                                                    
--coco_structure---ys, xs - [451 451 451 451 451 451 451 451 452 452 452 452 452 452 452 452 452 452
 452 453 453 453 453 453 453 453 453 453 453 453 453 453 453 454 454 454
 454 454 454 454 454 454 454 454 454 454 454 454 454 454 455 455 455 455
 455 455 455 455 455 455 455 455 455 455 455 455 455 455 455 456 456 456
 456 456 456 456 456 456 456 456 456 456 456 456 456 456 456 456 456 456
 456 457 457 457 457 457 457 457 457 457 457 457 457 457 457 457 457 457
 457 457 457 457 457 457 457 457 458 458 458 458 458 458 458 458 458 458
 458 458 458 458 458 458 458 458 458 458 458 458 458 458 458 458 458 459
 459 459 459 459 459 459 459 459 459 459 459 459 459 459 459 459 459 459
 459 459 459 459 459 459 459 459 459 460 460 460 460 460 460 460 460 460
 460 460 460 460 460 460 460 460 460 460 460 460 460 460 460 460 460 461
 461 461 461 461 461 461 461 461 461 461 461 461 461 461 461 461 461 461
 461 461 461 462 462 462 462] [586 587 588 589 590 591 592 593 584 585 586 587 588 589 590 591 592 593
 594 582 583 584 585 586 587 588 589 590 591 592 593 594 595 580 581 582
 583 584 585 586 587 588 589 590 591 592 593 594 595 596 579 580 581 582
 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 577 578 579
 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597
 598 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591
 592 593 594 595 596 597 598 599 574 575 576 577 578 579 580 581 582 583
 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 572
 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590
 591 592 593 594 595 596 597 598 599 571 572 573 574 575 576 577 578 579
 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 572
 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590
 591 592 593 586 587 588 589]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 571 600 451 462
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 297380)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 53621)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 298315 2 299017 6 299721 8 300424 10 301128 11 301832 11 302537 11 303243 8 303949 5 304655 2
--split_mask_rle--
 ['298315', '2', '299017', '6', '299721', '8', '300424', '10', '301128', '11', '301832', '11', '302537', '11', '303243', '8', '303949', '5', '304655', '2']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 10 10
--mask_rle--> ls_starts, ls_lengths [298315 299017 299721 300424 301128 301832 302537 303243 303949 304655] [ 2  6  8 10 11 11 11  8  5  2]
--mask_rle--> ls_ends [298316 299022 299728 300433 301138 301842 302547 303250 303953 304656]
--mask_rle-->  LENGTH -- ls_ends 10
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [366006     74]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [366006     74]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [    74 366006]
                                                                                                    
--coco_structure---ys, xs - [423 423 424 424 424 424 424 424 425 425 425 425 425 425 425 425 426 426
 426 426 426 426 426 426 426 426 427 427 427 427 427 427 427 427 427 427
 427 428 428 428 428 428 428 428 428 428 428 428 429 429 429 429 429 429
 429 429 429 429 429 430 430 430 430 430 430 430 430 431 431 431 431 431
 432 432] [522 523 520 521 522 523 524 525 520 521 522 523 524 525 526 527 519 520
 521 522 523 524 525 526 527 528 519 520 521 522 523 524 525 526 527 528
 529 519 520 521 522 523 524 525 526 527 528 529 520 521 522 523 524 525
 526 527 528 529 530 522 523 524 525 526 527 528 529 524 525 526 527 528
 526 527]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 519 530 423 432
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 270306)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 90050)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 305404 3 306107 5 306810 6 307513 7 308216 8 308919 9 309623 9 310326 10 311029 11 311732 13 312435 14 313139 14 313843 14 314548 13 315253 12 315957 12 316662 11 317367 10 318072 10 318776 10 319481 9 320186 8 320891 8 321596 7 322302 4 323007 1
--split_mask_rle--
 ['305404', '3', '306107', '5', '306810', '6', '307513', '7', '308216', '8', '308919', '9', '309623', '9', '310326', '10', '311029', '11', '311732', '13', '312435', '14', '313139', '14', '313843', '14', '314548', '13', '315253', '12', '315957', '12', '316662', '11', '317367', '10', '318072', '10', '318776', '10', '319481', '9', '320186', '8', '320891', '8', '321596', '7', '322302', '4', '323007', '1']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 26 26
--mask_rle--> ls_starts, ls_lengths [305404 306107 306810 307513 308216 308919 309623 310326 311029 311732
 312435 313139 313843 314548 315253 315957 316662 317367 318072 318776
 319481 320186 320891 321596 322302 323007] [ 3  5  6  7  8  9  9 10 11 13 14 14 14 13 12 12 11 10 10 10  9  8  8  7
  4  1]
--mask_rle--> ls_ends [305406 306111 306815 307519 308223 308927 309631 310335 311039 311744
 312448 313152 313856 314560 315264 315968 316672 317376 318081 318785
 319489 320193 320898 321602 322305 323007]
--mask_rle-->  LENGTH -- ls_ends 26
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365842    238]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365842    238]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   238 365842]
                                                                                                    
--coco_structure---ys, xs - [433 433 433 434 434 434 434 434 435 435 435 435 435 435 436 436 436 436
 436 436 436 437 437 437 437 437 437 437 437 438 438 438 438 438 438 438
 438 438 439 439 439 439 439 439 439 439 439 440 440 440 440 440 440 440
 440 440 440 441 441 441 441 441 441 441 441 441 441 441 442 442 442 442
 442 442 442 442 442 442 442 442 442 443 443 443 443 443 443 443 443 443
 443 443 443 443 443 444 444 444 444 444 444 444 444 444 444 444 444 444
 444 445 445 445 445 445 445 445 445 445 445 445 445 445 445 446 446 446
 446 446 446 446 446 446 446 446 446 446 447 447 447 447 447 447 447 447
 447 447 447 447 448 448 448 448 448 448 448 448 448 448 448 448 449 449
 449 449 449 449 449 449 449 449 449 450 450 450 450 450 450 450 450 450
 450 451 451 451 451 451 451 451 451 451 451 452 452 452 452 452 452 452
 452 452 452 453 453 453 453 453 453 453 453 453 454 454 454 454 454 454
 454 454 455 455 455 455 455 455 455 455 456 456 456 456 456 456 456 457
 457 457 457 458] [571 572 573 570 571 572 573 574 569 570 571 572 573 574 568 569 570 571
 572 573 574 567 568 569 570 571 572 573 574 566 567 568 569 570 571 572
 573 574 566 567 568 569 570 571 572 573 574 565 566 567 568 569 570 571
 572 573 574 564 565 566 567 568 569 570 571 572 573 574 563 564 565 566
 567 568 569 570 571 572 573 574 575 562 563 564 565 566 567 568 569 570
 571 572 573 574 575 562 563 564 565 566 567 568 569 570 571 572 573 574
 575 562 563 564 565 566 567 568 569 570 571 572 573 574 575 563 564 565
 566 567 568 569 570 571 572 573 574 575 564 565 566 567 568 569 570 571
 572 573 574 575 564 565 566 567 568 569 570 571 572 573 574 575 565 566
 567 568 569 570 571 572 573 574 575 566 567 568 569 570 571 572 573 574
 575 567 568 569 570 571 572 573 574 575 576 567 568 569 570 571 572 573
 574 575 576 568 569 570 571 572 573 574 575 576 569 570 571 572 573 574
 575 576 570 571 572 573 574 575 576 577 571 572 573 574 575 576 577 573
 574 575 576 574]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 562 577 433 458
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 292683)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 65583)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 301831 2 302534 4 303237 7 303940 9 304643 11 305346 12 306049 13 306753 12 307456 13 308160 12 308864 12 309569 10 310275 8 310980 6 311686 4
--split_mask_rle--
 ['301831', '2', '302534', '4', '303237', '7', '303940', '9', '304643', '11', '305346', '12', '306049', '13', '306753', '12', '307456', '13', '308160', '12', '308864', '12', '309569', '10', '310275', '8', '310980', '6', '311686', '4']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 15 15
--mask_rle--> ls_starts, ls_lengths [301831 302534 303237 303940 304643 305346 306049 306753 307456 308160
 308864 309569 310275 310980 311686] [ 2  4  7  9 11 12 13 12 13 12 12 10  8  6  4]
--mask_rle--> ls_ends [301832 302537 303243 303948 304653 305357 306061 306764 307468 308171
 308875 309578 310282 310985 311689]
--mask_rle-->  LENGTH -- ls_ends 15
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365945    135]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365945    135]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   135 365945]
                                                                                                    
--coco_structure---ys, xs - [428 428 429 429 429 429 430 430 430 430 430 430 430 431 431 431 431 431
 431 431 431 431 432 432 432 432 432 432 432 432 432 432 432 433 433 433
 433 433 433 433 433 433 433 433 433 434 434 434 434 434 434 434 434 434
 434 434 434 434 435 435 435 435 435 435 435 435 435 435 435 435 436 436
 436 436 436 436 436 436 436 436 436 436 436 437 437 437 437 437 437 437
 437 437 437 437 437 438 438 438 438 438 438 438 438 438 438 438 438 439
 439 439 439 439 439 439 439 439 439 440 440 440 440 440 440 440 440 441
 441 441 441 441 441 442 442 442 442] [518 519 517 518 519 520 516 517 518 519 520 521 522 515 516 517 518 519
 520 521 522 523 514 515 516 517 518 519 520 521 522 523 524 513 514 515
 516 517 518 519 520 521 522 523 524 512 513 514 515 516 517 518 519 520
 521 522 523 524 512 513 514 515 516 517 518 519 520 521 522 523 511 512
 513 514 515 516 517 518 519 520 521 522 523 511 512 513 514 515 516 517
 518 519 520 521 522 511 512 513 514 515 516 517 518 519 520 521 522 512
 513 514 515 516 517 518 519 520 521 514 515 516 517 518 519 520 521 515
 516 517 518 519 520 517 518 519 520]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 511 524 428 442
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 266156)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 93165)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 310943 2 311645 5 312349 5 313053 6 313757 6 314461 6 315165 6 315869 7 316573 7 317278 6 317982 6 318686 7 319390 7 320094 8 320798 8 321502 9 322206 9 322911 9 323615 9 324319 10 325023 10 325727 11 326431 11 327135 12 327839 12 328544 11 329248 11 329952 12 330656 12 331360 12 332064 12 332767 13 333471 12 334175 7 334183 2 334880 2
--split_mask_rle--
 ['310943', '2', '311645', '5', '312349', '5', '313053', '6', '313757', '6', '314461', '6', '315165', '6', '315869', '7', '316573', '7', '317278', '6', '317982', '6', '318686', '7', '319390', '7', '320094', '8', '320798', '8', '321502', '9', '322206', '9', '322911', '9', '323615', '9', '324319', '10', '325023', '10', '325727', '11', '326431', '11', '327135', '12', '327839', '12', '328544', '11', '329248', '11', '329952', '12', '330656', '12', '331360', '12', '332064', '12', '332767', '13', '333471', '12', '334175', '7', '334183', '2', '334880', '2']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 36 36
--mask_rle--> ls_starts, ls_lengths [310943 311645 312349 313053 313757 314461 315165 315869 316573 317278
 317982 318686 319390 320094 320798 321502 322206 322911 323615 324319
 325023 325727 326431 327135 327839 328544 329248 329952 330656 331360
 332064 332767 333471 334175 334183 334880] [ 2  5  5  6  6  6  6  7  7  6  6  7  7  8  8  9  9  9  9 10 10 11 11 12
 12 11 11 12 12 12 12 13 12  7  2  2]
--mask_rle--> ls_ends [310944 311649 312353 313058 313762 314466 315170 315875 316579 317283
 317987 318692 319396 320101 320805 321510 322214 322919 323623 324328
 325032 325737 326441 327146 327850 328554 329258 329963 330667 331371
 332075 332779 333482 334181 334184 334881]
--mask_rle-->  LENGTH -- ls_ends 36
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365780    300]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365780    300]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   300 365780]
                                                                                                    
--coco_structure---ys, xs - [441 441 442 442 442 442 442 443 443 443 443 443 444 444 444 444 444 444
 445 445 445 445 445 445 446 446 446 446 446 446 447 447 447 447 447 447
 448 448 448 448 448 448 448 449 449 449 449 449 449 449 450 450 450 450
 450 450 451 451 451 451 451 451 452 452 452 452 452 452 452 453 453 453
 453 453 453 453 454 454 454 454 454 454 454 454 455 455 455 455 455 455
 455 455 456 456 456 456 456 456 456 456 456 457 457 457 457 457 457 457
 457 457 458 458 458 458 458 458 458 458 458 459 459 459 459 459 459 459
 459 459 460 460 460 460 460 460 460 460 460 460 461 461 461 461 461 461
 461 461 461 461 462 462 462 462 462 462 462 462 462 462 462 463 463 463
 463 463 463 463 463 463 463 463 464 464 464 464 464 464 464 464 464 464
 464 464 465 465 465 465 465 465 465 465 465 465 465 465 466 466 466 466
 466 466 466 466 466 466 466 467 467 467 467 467 467 467 467 467 467 467
 468 468 468 468 468 468 468 468 468 468 468 468 469 469 469 469 469 469
 469 469 469 469 469 469 470 470 470 470 470 470 470 470 470 470 470 470
 471 471 471 471 471 471 471 471 471 471 471 471 472 472 472 472 472 472
 472 472 472 472 472 472 472 473 473 473 473 473 473 473 473 473 473 473
 473 474 474 474 474 474 474 474 474 474 475 475] [478 479 476 477 478 479 480 476 477 478 479 480 476 477 478 479 480 481
 476 477 478 479 480 481 476 477 478 479 480 481 476 477 478 479 480 481
 476 477 478 479 480 481 482 476 477 478 479 480 481 482 477 478 479 480
 481 482 477 478 479 480 481 482 477 478 479 480 481 482 483 477 478 479
 480 481 482 483 477 478 479 480 481 482 483 484 477 478 479 480 481 482
 483 484 477 478 479 480 481 482 483 484 485 477 478 479 480 481 482 483
 484 485 478 479 480 481 482 483 484 485 486 478 479 480 481 482 483 484
 485 486 478 479 480 481 482 483 484 485 486 487 478 479 480 481 482 483
 484 485 486 487 478 479 480 481 482 483 484 485 486 487 488 478 479 480
 481 482 483 484 485 486 487 488 478 479 480 481 482 483 484 485 486 487
 488 489 478 479 480 481 482 483 484 485 486 487 488 489 479 480 481 482
 483 484 485 486 487 488 489 479 480 481 482 483 484 485 486 487 488 489
 479 480 481 482 483 484 485 486 487 488 489 490 479 480 481 482 483 484
 485 486 487 488 489 490 479 480 481 482 483 484 485 486 487 488 489 490
 479 480 481 482 483 484 485 486 487 488 489 490 478 479 480 481 482 483
 484 485 486 487 488 489 490 478 479 480 481 482 483 484 485 486 487 488
 489 478 479 480 481 482 483 484 486 487 479 480]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 476 490 441 475
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 247962)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 486)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 35)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 486)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 34)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 488)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 31)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 493)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 27)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 21)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 110807)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 299065 3 299766 7 300469 8 301173 8 301876 9 302579 10 303282 11 303986 11 304689 12 305392 13 306095 13 306799 13 307502 13 308205 13 308908 14 309612 13 310315 13 311018 12 311721 12 312425 10 313128 9 313831 8 314534 7 315238 6 315941 6 316645 4 317350 2
--split_mask_rle--
 ['299065', '3', '299766', '7', '300469', '8', '301173', '8', '301876', '9', '302579', '10', '303282', '11', '303986', '11', '304689', '12', '305392', '13', '306095', '13', '306799', '13', '307502', '13', '308205', '13', '308908', '14', '309612', '13', '310315', '13', '311018', '12', '311721', '12', '312425', '10', '313128', '9', '313831', '8', '314534', '7', '315238', '6', '315941', '6', '316645', '4', '317350', '2']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 27 27
--mask_rle--> ls_starts, ls_lengths [299065 299766 300469 301173 301876 302579 303282 303986 304689 305392
 306095 306799 307502 308205 308908 309612 310315 311018 311721 312425
 313128 313831 314534 315238 315941 316645 317350] [ 3  7  8  8  9 10 11 11 12 13 13 13 13 13 14 13 13 12 12 10  9  8  7  6
  6  4  2]
--mask_rle--> ls_ends [299067 299772 300476 301180 301884 302588 303292 303996 304700 305404
 306107 306811 307514 308217 308921 309624 310327 311029 311732 312434
 313136 313838 314540 315243 315946 316648 317351]
--mask_rle-->  LENGTH -- ls_ends 27
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365820    260]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365820    260]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   260 365820]
                                                                                                    
--coco_structure---ys, xs - [424 424 424 425 425 425 425 425 425 425 426 426 426 426 426 426 426 426
 427 427 427 427 427 427 427 427 428 428 428 428 428 428 428 428 428 429
 429 429 429 429 429 429 429 429 429 430 430 430 430 430 430 430 430 430
 430 430 431 431 431 431 431 431 431 431 431 431 431 432 432 432 432 432
 432 432 432 432 432 432 432 433 433 433 433 433 433 433 433 433 433 433
 433 433 434 434 434 434 434 434 434 434 434 434 434 434 434 435 435 435
 435 435 435 435 435 435 435 435 435 435 436 436 436 436 436 436 436 436
 436 436 436 436 436 437 437 437 437 437 437 437 437 437 437 437 437 437
 438 438 438 438 438 438 438 438 438 438 438 438 438 438 439 439 439 439
 439 439 439 439 439 439 439 439 439 440 440 440 440 440 440 440 440 440
 440 440 440 440 441 441 441 441 441 441 441 441 441 441 441 441 442 442
 442 442 442 442 442 442 442 442 442 442 443 443 443 443 443 443 443 443
 443 443 444 444 444 444 444 444 444 444 444 445 445 445 445 445 445 445
 445 446 446 446 446 446 446 446 447 447 447 447 447 447 448 448 448 448
 448 448 449 449 449 449 450 450] [568 569 570 565 566 567 568 569 570 571 564 565 566 567 568 569 570 571
 564 565 566 567 568 569 570 571 563 564 565 566 567 568 569 570 571 562
 563 564 565 566 567 568 569 570 571 561 562 563 564 565 566 567 568 569
 570 571 561 562 563 564 565 566 567 568 569 570 571 560 561 562 563 564
 565 566 567 568 569 570 571 559 560 561 562 563 564 565 566 567 568 569
 570 571 558 559 560 561 562 563 564 565 566 567 568 569 570 558 559 560
 561 562 563 564 565 566 567 568 569 570 557 558 559 560 561 562 563 564
 565 566 567 568 569 556 557 558 559 560 561 562 563 564 565 566 567 568
 555 556 557 558 559 560 561 562 563 564 565 566 567 568 555 556 557 558
 559 560 561 562 563 564 565 566 567 554 555 556 557 558 559 560 561 562
 563 564 565 566 553 554 555 556 557 558 559 560 561 562 563 564 552 553
 554 555 556 557 558 559 560 561 562 563 552 553 554 555 556 557 558 559
 560 561 551 552 553 554 555 556 557 558 559 550 551 552 553 554 555 556
 557 549 550 551 552 553 554 555 549 550 551 552 553 554 548 549 550 551
 552 553 548 549 550 551 549 550]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 548 571 424 450
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 285408)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 68726)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 343369 8 344070 15 344773 18 345477 18 346181 18 346885 18 347590 18 348294 18 349000 16 349706 14 350413 9 351119 3
--split_mask_rle--
 ['343369', '8', '344070', '15', '344773', '18', '345477', '18', '346181', '18', '346885', '18', '347590', '18', '348294', '18', '349000', '16', '349706', '14', '350413', '9', '351119', '3']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 12 12
--mask_rle--> ls_starts, ls_lengths [343369 344070 344773 345477 346181 346885 347590 348294 349000 349706
 350413 351119] [ 8 15 18 18 18 18 18 18 16 14  9  3]
--mask_rle--> ls_ends [343376 344084 344790 345494 346198 346902 347607 348311 349015 349719
 350421 351121]
--mask_rle-->  LENGTH -- ls_ends 12
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365907    173]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365907    173]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   173 365907]
                                                                                                    
--coco_structure---ys, xs - [487 487 487 487 487 487 487 487 488 488 488 488 488 488 488 488 488 488
 488 488 488 488 488 489 489 489 489 489 489 489 489 489 489 489 489 489
 489 489 489 489 489 490 490 490 490 490 490 490 490 490 490 490 490 490
 490 490 490 490 490 491 491 491 491 491 491 491 491 491 491 491 491 491
 491 491 491 491 491 492 492 492 492 492 492 492 492 492 492 492 492 492
 492 492 492 492 492 493 493 493 493 493 493 493 493 493 493 493 493 493
 493 493 493 493 493 494 494 494 494 494 494 494 494 494 494 494 494 494
 494 494 494 494 494 495 495 495 495 495 495 495 495 495 495 495 495 495
 495 495 495 496 496 496 496 496 496 496 496 496 496 496 496 496 496 497
 497 497 497 497 497 497 497 497 498 498 498] [520 521 522 523 524 525 526 527 517 518 519 520 521 522 523 524 525 526
 527 528 529 530 531 516 517 518 519 520 521 522 523 524 525 526 527 528
 529 530 531 532 533 516 517 518 519 520 521 522 523 524 525 526 527 528
 529 530 531 532 533 516 517 518 519 520 521 522 523 524 525 526 527 528
 529 530 531 532 533 516 517 518 519 520 521 522 523 524 525 526 527 528
 529 530 531 532 533 517 518 519 520 521 522 523 524 525 526 527 528 529
 530 531 532 533 534 517 518 519 520 521 522 523 524 525 526 527 528 529
 530 531 532 533 534 519 520 521 522 523 524 525 526 527 528 529 530 531
 532 533 534 521 522 523 524 525 526 527 528 529 530 531 532 533 534 524
 525 526 527 528 529 530 531 532 526 527 528]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 516 534 487 498
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 268809)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 87903)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 322335 4 323034 10 323734 14 324408 6 324434 16 325109 3 325118 10 325134 17 325811 2 325817 35 326512 3 326516 37 327214 39 327916 38 328618 37 329320 36 330023 35 330727 33 331431 31 332136 28 332843 13
--split_mask_rle--
 ['322335', '4', '323034', '10', '323734', '14', '324408', '6', '324434', '16', '325109', '3', '325118', '10', '325134', '17', '325811', '2', '325817', '35', '326512', '3', '326516', '37', '327214', '39', '327916', '38', '328618', '37', '329320', '36', '330023', '35', '330727', '33', '331431', '31', '332136', '28', '332843', '13']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 21 21
--mask_rle--> ls_starts, ls_lengths [322335 323034 323734 324408 324434 325109 325118 325134 325811 325817
 326512 326516 327214 327916 328618 329320 330023 330727 331431 332136
 332843] [ 4 10 14  6 16  3 10 17  2 35  3 37 39 38 37 36 35 33 31 28 13]
--mask_rle--> ls_ends [322338 323043 323747 324413 324449 325111 325127 325150 325812 325851
 326514 326552 327252 327953 328654 329355 330057 330759 331461 332163
 332855]
--mask_rle-->  LENGTH -- ls_ends 21
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365633    447]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365633    447]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   447 365633]
                                                                                                    
--coco_structure---ys, xs - [457 457 457 457 458 458 458 458 458 458 458 458 458 458 459 459 459 459
 459 459 459 459 459 459 459 459 459 459 460 460 460 460 460 460 460 460
 460 460 460 460 460 460 460 460 460 460 460 460 460 460 461 461 461 461
 461 461 461 461 461 461 461 461 461 461 461 461 461 461 461 461 461 461
 461 461 461 461 461 461 461 461 462 462 462 462 462 462 462 462 462 462
 462 462 462 462 462 462 462 462 462 462 462 462 462 462 462 462 462 462
 462 462 462 462 462 462 462 462 462 463 463 463 463 463 463 463 463 463
 463 463 463 463 463 463 463 463 463 463 463 463 463 463 463 463 463 463
 463 463 463 463 463 463 463 463 463 463 463 463 463 464 464 464 464 464
 464 464 464 464 464 464 464 464 464 464 464 464 464 464 464 464 464 464
 464 464 464 464 464 464 464 464 464 464 464 464 464 464 464 464 465 465
 465 465 465 465 465 465 465 465 465 465 465 465 465 465 465 465 465 465
 465 465 465 465 465 465 465 465 465 465 465 465 465 465 465 465 465 465
 466 466 466 466 466 466 466 466 466 466 466 466 466 466 466 466 466 466
 466 466 466 466 466 466 466 466 466 466 466 466 466 466 466 466 466 466
 466 467 467 467 467 467 467 467 467 467 467 467 467 467 467 467 467 467
 467 467 467 467 467 467 467 467 467 467 467 467 467 467 467 467 467 467
 467 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468
 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468
 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469
 469 469 469 469 469 469 469 469 469 469 469 469 469 469 469 470 470 470
 470 470 470 470 470 470 470 470 470 470 470 470 470 470 470 470 470 470
 470 470 470 470 470 470 470 470 470 470 471 471 471 471 471 471 471 471
 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471 471
 471 471 472 472 472 472 472 472 472 472 472 472 472 472 472] [606 607 608 609 601 602 603 604 605 606 607 608 609 610 597 598 599 600
 601 602 603 604 605 606 607 608 609 610 567 568 569 570 571 572 593 594
 595 596 597 598 599 600 601 602 603 604 605 606 607 608 564 565 566 573
 574 575 576 577 578 579 580 581 582 589 590 591 592 593 594 595 596 597
 598 599 600 601 602 603 604 605 562 563 568 569 570 571 572 573 574 575
 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593
 594 595 596 597 598 599 600 601 602 559 560 561 563 564 565 566 567 568
 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586
 587 588 589 590 591 592 593 594 595 596 597 598 599 557 558 559 560 561
 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579
 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 555 556
 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574
 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592
 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570
 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588
 589 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567
 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585
 586 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566
 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584
 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567
 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 550 551 552
 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570
 571 572 573 574 575 576 577 578 579 580 551 552 553 554 555 556 557 558
 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576
 577 578 554 555 556 557 558 559 560 561 562 563 564 565 566]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 550 610 457 472
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 286468)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 61 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 62 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 63 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 64 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 65 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 66 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 67 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 68 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 69 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 70 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 71 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 72 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 73 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 74 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 75 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 76 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 77 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 78 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 79 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 80 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 81 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 82 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 83 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 84 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 85 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 86 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 87 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 88 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 89 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 90 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 91 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 92 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 93 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 94 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 95 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 96 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 97 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 98 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 99 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 100 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 101 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 102 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 103 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 104 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 105 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 106 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 107 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 108 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 109 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 110 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 111 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 112 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 113 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 114 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 115 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 116 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 117 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 118 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 119 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 120 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 121 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 122 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 123 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 124 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 125 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 126 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 127 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 128 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 129 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 130 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 131 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 132 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 133 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 134 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 135 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 136 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 137 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 138 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 139 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 140 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 141 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 142 (0, 48420)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 356858 3 357559 7 358261 9 358963 10 359666 11 360368 12 361071 13 361774 13 362478 13 363183 11 363889 9 364595 7 365299 7 366004 6
--split_mask_rle--
 ['356858', '3', '357559', '7', '358261', '9', '358963', '10', '359666', '11', '360368', '12', '361071', '13', '361774', '13', '362478', '13', '363183', '11', '363889', '9', '364595', '7', '365299', '7', '366004', '6']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 14 14
--mask_rle--> ls_starts, ls_lengths [356858 357559 358261 358963 359666 360368 361071 361774 362478 363183
 363889 364595 365299 366004] [ 3  7  9 10 11 12 13 13 13 11  9  7  7  6]
--mask_rle--> ls_ends [356860 357565 358269 358972 359676 360379 361083 361786 362490 363193
 363897 364601 365305 366009]
--mask_rle-->  LENGTH -- ls_ends 14
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365949    131]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365949    131]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   131 365949]
                                                                                                    
--coco_structure---ys, xs - [506 506 506 507 507 507 507 507 507 507 508 508 508 508 508 508 508 508
 508 509 509 509 509 509 509 509 509 509 509 510 510 510 510 510 510 510
 510 510 510 510 511 511 511 511 511 511 511 511 511 511 511 511 512 512
 512 512 512 512 512 512 512 512 512 512 512 513 513 513 513 513 513 513
 513 513 513 513 513 513 514 514 514 514 514 514 514 514 514 514 514 514
 514 515 515 515 515 515 515 515 515 515 515 515 516 516 516 516 516 516
 516 516 516 517 517 517 517 517 517 517 518 518 518 518 518 518 518 519
 519 519 519 519 519] [633 634 635 630 631 632 633 634 635 636 628 629 630 631 632 633 634 635
 636 626 627 628 629 630 631 632 633 634 635 625 626 627 628 629 630 631
 632 633 634 635 623 624 625 626 627 628 629 630 631 632 633 634 622 623
 624 625 626 627 628 629 630 631 632 633 634 621 622 623 624 625 626 627
 628 629 630 631 632 633 621 622 623 624 625 626 627 628 629 630 631 632
 633 622 623 624 625 626 627 628 629 630 631 632 624 625 626 627 628 629
 630 631 632 626 627 628 629 630 631 632 626 627 628 629 630 631 632 627
 628 629 630 631 632]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 621 636 506 519
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 323433)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 34851)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 321552 4 322252 10 322953 14 323657 15 324360 16 325064 17 325768 16 326471 16 327175 16 327880 14 328588 9
--split_mask_rle--
 ['321552', '4', '322252', '10', '322953', '14', '323657', '15', '324360', '16', '325064', '17', '325768', '16', '326471', '16', '327175', '16', '327880', '14', '328588', '9']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 11 11
--mask_rle--> ls_starts, ls_lengths [321552 322252 322953 323657 324360 325064 325768 326471 327175 327880
 328588] [ 4 10 14 15 16 17 16 16 16 14  9]
--mask_rle--> ls_ends [321555 322261 322966 323671 324375 325080 325783 326486 327190 327893
 328596]
--mask_rle-->  LENGTH -- ls_ends 11
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365933    147]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365933    147]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   147 365933]
                                                                                                    
--coco_structure---ys, xs - [456 456 456 456 457 457 457 457 457 457 457 457 457 457 458 458 458 458
 458 458 458 458 458 458 458 458 458 458 459 459 459 459 459 459 459 459
 459 459 459 459 459 459 459 460 460 460 460 460 460 460 460 460 460 460
 460 460 460 460 460 461 461 461 461 461 461 461 461 461 461 461 461 461
 461 461 461 461 462 462 462 462 462 462 462 462 462 462 462 462 462 462
 462 462 463 463 463 463 463 463 463 463 463 463 463 463 463 463 463 463
 464 464 464 464 464 464 464 464 464 464 464 464 464 464 464 464 465 465
 465 465 465 465 465 465 465 465 465 465 465 465 466 466 466 466 466 466
 466 466 466] [527 528 529 530 523 524 525 526 527 528 529 530 531 532 520 521 522 523
 524 525 526 527 528 529 530 531 532 533 520 521 522 523 524 525 526 527
 528 529 530 531 532 533 534 519 520 521 522 523 524 525 526 527 528 529
 530 531 532 533 534 519 520 521 522 523 524 525 526 527 528 529 530 531
 532 533 534 535 519 520 521 522 523 524 525 526 527 528 529 530 531 532
 533 534 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533
 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 519 520
 521 522 523 524 525 526 527 528 529 530 531 532 523 524 525 526 527 528
 529 530 531]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 518 535 456 466
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 269823)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 87418)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 300553 5 301254 11 301955 14 302656 17 303357 19 304059 20 304762 20 305464 21 306167 21 306870 21 307573 20 308276 19 308982 15 309688 7
--split_mask_rle--
 ['300553', '5', '301254', '11', '301955', '14', '302656', '17', '303357', '19', '304059', '20', '304762', '20', '305464', '21', '306167', '21', '306870', '21', '307573', '20', '308276', '19', '308982', '15', '309688', '7']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 14 14
--mask_rle--> ls_starts, ls_lengths [300553 301254 301955 302656 303357 304059 304762 305464 306167 306870
 307573 308276 308982 309688] [ 5 11 14 17 19 20 20 21 21 21 20 19 15  7]
--mask_rle--> ls_ends [300557 301264 301968 302672 303375 304078 304781 305484 306187 306890
 307592 308294 308996 309694]
--mask_rle-->  LENGTH -- ls_ends 14
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365850    230]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365850    230]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   230 365850]
                                                                                                    
--coco_structure---ys, xs - [426 426 426 426 426 427 427 427 427 427 427 427 427 427 427 427 428 428
 428 428 428 428 428 428 428 428 428 428 428 428 429 429 429 429 429 429
 429 429 429 429 429 429 429 429 429 429 429 430 430 430 430 430 430 430
 430 430 430 430 430 430 430 430 430 430 430 430 431 431 431 431 431 431
 431 431 431 431 431 431 431 431 431 431 431 431 431 431 432 432 432 432
 432 432 432 432 432 432 432 432 432 432 432 432 432 432 432 432 433 433
 433 433 433 433 433 433 433 433 433 433 433 433 433 433 433 433 433 433
 433 434 434 434 434 434 434 434 434 434 434 434 434 434 434 434 434 434
 434 434 434 434 435 435 435 435 435 435 435 435 435 435 435 435 435 435
 435 435 435 435 435 435 435 436 436 436 436 436 436 436 436 436 436 436
 436 436 436 436 436 436 436 436 436 437 437 437 437 437 437 437 437 437
 437 437 437 437 437 437 437 437 437 437 438 438 438 438 438 438 438 438
 438 438 438 438 438 438 438 439 439 439 439 439 439 439] [648 649 650 651 652 645 646 647 648 649 650 651 652 653 654 655 642 643
 644 645 646 647 648 649 650 651 652 653 654 655 639 640 641 642 643 644
 645 646 647 648 649 650 651 652 653 654 655 636 637 638 639 640 641 642
 643 644 645 646 647 648 649 650 651 652 653 654 634 635 636 637 638 639
 640 641 642 643 644 645 646 647 648 649 650 651 652 653 633 634 635 636
 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 631 632
 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650
 651 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646
 647 648 649 650 629 630 631 632 633 634 635 636 637 638 639 640 641 642
 643 644 645 646 647 648 649 628 629 630 631 632 633 634 635 636 637 638
 639 640 641 642 643 644 645 646 647 627 628 629 630 631 632 633 634 635
 636 637 638 639 640 641 642 643 644 645 629 630 631 632 633 634 635 636
 637 638 639 640 641 642 643 631 632 633 634 635 636 637]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 627 655 426 439
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 326477)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 25050)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 289059 4 289759 8 290462 8 291165 9 291868 10 292571 10 293274 11 293978 10 294681 11 295385 11 296089 10 296793 10 297496 11 298200 11 298904 10 299608 10 300311 11 301015 11 301719 11 302422 12 303126 11 303830 11 304534 11 305237 12 305941 12 306645 11 307349 11 308052 12 308756 12 309460 12 310164 12 310868 11 311572 11 312276 11 312979 12 313683 12 314387 11 315091 11 315795 11 316499 11 317203 11 317907 10 318611 10 319315 10 320019 10 320723 10 321426 11 322130 10 322834 10 323538 10 324242 9 324946 9 325650 8 326353 9 327056 10 327759 11 328462 12 329165 13 329872 2
--split_mask_rle--
 ['289059', '4', '289759', '8', '290462', '8', '291165', '9', '291868', '10', '292571', '10', '293274', '11', '293978', '10', '294681', '11', '295385', '11', '296089', '10', '296793', '10', '297496', '11', '298200', '11', '298904', '10', '299608', '10', '300311', '11', '301015', '11', '301719', '11', '302422', '12', '303126', '11', '303830', '11', '304534', '11', '305237', '12', '305941', '12', '306645', '11', '307349', '11', '308052', '12', '308756', '12', '309460', '12', '310164', '12', '310868', '11', '311572', '11', '312276', '11', '312979', '12', '313683', '12', '314387', '11', '315091', '11', '315795', '11', '316499', '11', '317203', '11', '317907', '10', '318611', '10', '319315', '10', '320019', '10', '320723', '10', '321426', '11', '322130', '10', '322834', '10', '323538', '10', '324242', '9', '324946', '9', '325650', '8', '326353', '9', '327056', '10', '327759', '11', '328462', '12', '329165', '13', '329872', '2']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 59 59
--mask_rle--> ls_starts, ls_lengths [289059 289759 290462 291165 291868 292571 293274 293978 294681 295385
 296089 296793 297496 298200 298904 299608 300311 301015 301719 302422
 303126 303830 304534 305237 305941 306645 307349 308052 308756 309460
 310164 310868 311572 312276 312979 313683 314387 315091 315795 316499
 317203 317907 318611 319315 320019 320723 321426 322130 322834 323538
 324242 324946 325650 326353 327056 327759 328462 329165 329872] [ 4  8  8  9 10 10 11 10 11 11 10 10 11 11 10 10 11 11 11 12 11 11 11 12
 12 11 11 12 12 12 12 11 11 11 12 12 11 11 11 11 11 10 10 10 10 10 11 10
 10 10  9  9  8  9 10 11 12 13  2]
--mask_rle--> ls_ends [289062 289766 290469 291173 291877 292580 293284 293987 294691 295395
 296098 296802 297506 298210 298913 299617 300321 301025 301729 302433
 303136 303840 304544 305248 305952 306655 307359 308063 308767 309471
 310175 310878 311582 312286 312990 313694 314397 315101 315805 316509
 317213 317916 318620 319324 320028 320732 321436 322139 322843 323547
 324250 324954 325657 326361 327065 327769 328473 329177 329873]
--mask_rle-->  LENGTH -- ls_ends 59
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365468    612]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365468    612]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   612 365468]
                                                                                                    
--coco_structure---ys, xs - [410 410 410 410 411 411 411 411 411 411 411 411 412 412 412 412 412 412
 412 412 413 413 413 413 413 413 413 413 413 414 414 414 414 414 414 414
 414 414 414 415 415 415 415 415 415 415 415 415 415 416 416 416 416 416
 416 416 416 416 416 416 417 417 417 417 417 417 417 417 417 417 418 418
 418 418 418 418 418 418 418 418 418 419 419 419 419 419 419 419 419 419
 419 419 420 420 420 420 420 420 420 420 420 420 421 421 421 421 421 421
 421 421 421 421 422 422 422 422 422 422 422 422 422 422 422 423 423 423
 423 423 423 423 423 423 423 423 424 424 424 424 424 424 424 424 424 424
 425 425 425 425 425 425 425 425 425 425 426 426 426 426 426 426 426 426
 426 426 426 427 427 427 427 427 427 427 427 427 427 427 428 428 428 428
 428 428 428 428 428 428 428 429 429 429 429 429 429 429 429 429 429 429
 429 430 430 430 430 430 430 430 430 430 430 430 431 431 431 431 431 431
 431 431 431 431 431 432 432 432 432 432 432 432 432 432 432 432 433 433
 433 433 433 433 433 433 433 433 433 433 434 434 434 434 434 434 434 434
 434 434 434 434 435 435 435 435 435 435 435 435 435 435 435 436 436 436
 436 436 436 436 436 436 436 436 437 437 437 437 437 437 437 437 437 437
 437 437 438 438 438 438 438 438 438 438 438 438 438 438 439 439 439 439
 439 439 439 439 439 439 439 439 440 440 440 440 440 440 440 440 440 440
 440 440 441 441 441 441 441 441 441 441 441 441 441 442 442 442 442 442
 442 442 442 442 442 442 443 443 443 443 443 443 443 443 443 443 443 444
 444 444 444 444 444 444 444 444 444 444 444 445 445 445 445 445 445 445
 445 445 445 445 445 446 446 446 446 446 446 446 446 446 446 446 447 447
 447 447 447 447 447 447 447 447 447 448 448 448 448 448 448 448 448 448
 448 448 449 449 449 449 449 449 449 449 449 449 449 450 450 450 450 450
 450 450 450 450 450 450 451 451 451 451 451 451 451 451 451 451 452 452
 452 452 452 452 452 452 452 452 453 453 453 453 453 453 453 453 453 453
 454 454 454 454 454 454 454 454 454 454 455 455 455 455 455 455 455 455
 455 455 456 456 456 456 456 456 456 456 456 456 456 457 457 457 457 457
 457 457 457 457 457 458 458 458 458 458 458 458 458 458 458 459 459 459
 459 459 459 459 459 459 459 460 460 460 460 460 460 460 460 460 461 461
 461 461 461 461 461 461 461 462 462 462 462 462 462 462 462 463 463 463
 463 463 463 463 463 463 464 464 464 464 464 464 464 464 464 464 465 465
 465 465 465 465 465 465 465 465 465 466 466 466 466 466 466 466 466 466
 466 466 466 467 467 467 467 467 467 467 467 467 467 467 467 467 468 468] [418 419 420 421 414 415 416 417 418 419 420 421 413 414 415 416 417 418
 419 420 412 413 414 415 416 417 418 419 420 411 412 413 414 415 416 417
 418 419 420 410 411 412 413 414 415 416 417 418 419 409 410 411 412 413
 414 415 416 417 418 419 409 410 411 412 413 414 415 416 417 418 408 409
 410 411 412 413 414 415 416 417 418 408 409 410 411 412 413 414 415 416
 417 418 408 409 410 411 412 413 414 415 416 417 408 409 410 411 412 413
 414 415 416 417 407 408 409 410 411 412 413 414 415 416 417 407 408 409
 410 411 412 413 414 415 416 417 407 408 409 410 411 412 413 414 415 416
 407 408 409 410 411 412 413 414 415 416 406 407 408 409 410 411 412 413
 414 415 416 406 407 408 409 410 411 412 413 414 415 416 406 407 408 409
 410 411 412 413 414 415 416 405 406 407 408 409 410 411 412 413 414 415
 416 405 406 407 408 409 410 411 412 413 414 415 405 406 407 408 409 410
 411 412 413 414 415 405 406 407 408 409 410 411 412 413 414 415 404 405
 406 407 408 409 410 411 412 413 414 415 404 405 406 407 408 409 410 411
 412 413 414 415 404 405 406 407 408 409 410 411 412 413 414 404 405 406
 407 408 409 410 411 412 413 414 403 404 405 406 407 408 409 410 411 412
 413 414 403 404 405 406 407 408 409 410 411 412 413 414 403 404 405 406
 407 408 409 410 411 412 413 414 403 404 405 406 407 408 409 410 411 412
 413 414 403 404 405 406 407 408 409 410 411 412 413 403 404 405 406 407
 408 409 410 411 412 413 403 404 405 406 407 408 409 410 411 412 413 402
 403 404 405 406 407 408 409 410 411 412 413 402 403 404 405 406 407 408
 409 410 411 412 413 402 403 404 405 406 407 408 409 410 411 412 402 403
 404 405 406 407 408 409 410 411 412 402 403 404 405 406 407 408 409 410
 411 412 402 403 404 405 406 407 408 409 410 411 412 402 403 404 405 406
 407 408 409 410 411 412 402 403 404 405 406 407 408 409 410 411 402 403
 404 405 406 407 408 409 410 411 402 403 404 405 406 407 408 409 410 411
 402 403 404 405 406 407 408 409 410 411 402 403 404 405 406 407 408 409
 410 411 401 402 403 404 405 406 407 408 409 410 411 401 402 403 404 405
 406 407 408 409 410 401 402 403 404 405 406 407 408 409 410 401 402 403
 404 405 406 407 408 409 410 401 402 403 404 405 406 407 408 409 401 402
 403 404 405 406 407 408 409 401 402 403 404 405 406 407 408 400 401 402
 403 404 405 406 407 408 399 400 401 402 403 404 405 406 407 408 398 399
 400 401 402 403 404 405 406 407 408 397 398 399 400 401 402 403 404 405
 406 407 408 396 397 398 399 400 401 402 403 404 405 406 407 408 399 400]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 396 421 410 468
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 206387)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 489)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 31)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 485)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 35)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 481)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 39)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 478)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 42)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 474)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 46)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 470)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 50)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 468)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 46)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 473)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 45)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 474)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 43)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 476)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 38)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 481)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 34)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 485)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 30)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 490)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 146748)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 240512 1 240532 2 241213 6 241235 1 241238 1 241917 7 241938 1 241943 1 242620 9 242641 1 242647 1 243324 11 243344 1 243352 1 244028 27 244056 1 244732 28 244761 1 245436 30 246139 32 246843 32 247547 33 248251 33 248955 32 249662 28 250371 22 251076 20 251780 18 252484 15 253187 13 253891 10 254594 9 255298 7 256003 5 256707 4 257412 1
--split_mask_rle--
 ['240512', '1', '240532', '2', '241213', '6', '241235', '1', '241238', '1', '241917', '7', '241938', '1', '241943', '1', '242620', '9', '242641', '1', '242647', '1', '243324', '11', '243344', '1', '243352', '1', '244028', '27', '244056', '1', '244732', '28', '244761', '1', '245436', '30', '246139', '32', '246843', '32', '247547', '33', '248251', '33', '248955', '32', '249662', '28', '250371', '22', '251076', '20', '251780', '18', '252484', '15', '253187', '13', '253891', '10', '254594', '9', '255298', '7', '256003', '5', '256707', '4', '257412', '1']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 36 36
--mask_rle--> ls_starts, ls_lengths [240512 240532 241213 241235 241238 241917 241938 241943 242620 242641
 242647 243324 243344 243352 244028 244056 244732 244761 245436 246139
 246843 247547 248251 248955 249662 250371 251076 251780 252484 253187
 253891 254594 255298 256003 256707 257412] [ 1  2  6  1  1  7  1  1  9  1  1 11  1  1 27  1 28  1 30 32 32 33 33 32
 28 22 20 18 15 13 10  9  7  5  4  1]
--mask_rle--> ls_ends [240512 240533 241218 241235 241238 241923 241938 241943 242628 242641
 242647 243334 243344 243352 244054 244056 244759 244761 245465 246170
 246874 247579 248283 248986 249689 250392 251095 251797 252498 253199
 253900 254602 255304 256007 256710 257412]
--mask_rle-->  LENGTH -- ls_ends 36
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365635    445]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365635    445]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   445 365635]
                                                                                                    
--coco_structure---ys, xs - [341 341 341 342 342 342 342 342 342 342 342 343 343 343 343 343 343 343
 343 343 344 344 344 344 344 344 344 344 344 344 344 345 345 345 345 345
 345 345 345 345 345 345 345 345 346 346 346 346 346 346 346 346 346 346
 346 346 346 346 346 346 346 346 346 346 346 346 346 346 346 346 346 346
 347 347 347 347 347 347 347 347 347 347 347 347 347 347 347 347 347 347
 347 347 347 347 347 347 347 347 347 347 347 348 348 348 348 348 348 348
 348 348 348 348 348 348 348 348 348 348 348 348 348 348 348 348 348 348
 348 348 348 348 348 349 349 349 349 349 349 349 349 349 349 349 349 349
 349 349 349 349 349 349 349 349 349 349 349 349 349 349 349 349 349 349
 349 350 350 350 350 350 350 350 350 350 350 350 350 350 350 350 350 350
 350 350 350 350 350 350 350 350 350 350 350 350 350 350 350 351 351 351
 351 351 351 351 351 351 351 351 351 351 351 351 351 351 351 351 351 351
 351 351 351 351 351 351 351 351 351 351 351 351 352 352 352 352 352 352
 352 352 352 352 352 352 352 352 352 352 352 352 352 352 352 352 352 352
 352 352 352 352 352 352 352 352 352 353 353 353 353 353 353 353 353 353
 353 353 353 353 353 353 353 353 353 353 353 353 353 353 353 353 353 353
 353 353 353 353 353 354 354 354 354 354 354 354 354 354 354 354 354 354
 354 354 354 354 354 354 354 354 354 354 354 354 354 354 354 355 355 355
 355 355 355 355 355 355 355 355 355 355 355 355 355 355 355 355 355 355
 355 356 356 356 356 356 356 356 356 356 356 356 356 356 356 356 356 356
 356 356 356 357 357 357 357 357 357 357 357 357 357 357 357 357 357 357
 357 357 357 358 358 358 358 358 358 358 358 358 358 358 358 358 358 358
 359 359 359 359 359 359 359 359 359 359 359 359 359 360 360 360 360 360
 360 360 360 360 360 361 361 361 361 361 361 361 361 361 362 362 362 362
 362 362 362 363 363 363 363 363 364 364 364 364 365] [447 467 468 444 445 446 447 448 449 466 469 444 445 446 447 448 449 450
 465 470 443 444 445 446 447 448 449 450 451 464 470 443 444 445 446 447
 448 449 450 451 452 453 463 471 443 444 445 446 447 448 449 450 451 452
 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 471
 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460
 461 462 463 464 465 466 467 468 469 470 472 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 442 443 444 445 446 447 448 449 450 451 452 453 454
 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472
 473 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458
 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 442 443 444
 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462
 463 464 465 466 467 468 469 470 471 472 473 474 442 443 444 445 446 447
 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465
 466 467 468 469 470 471 472 473 474 442 443 444 445 446 447 448 449 450
 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468
 469 470 471 472 473 445 446 447 448 449 450 451 452 453 454 455 456 457
 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 450 451 452
 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470
 471 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465
 466 467 468 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465
 450 451 452 453 454 455 456 457 458 459 460 461 462 450 451 452 453 454
 455 456 457 458 459 449 450 451 452 453 454 455 456 457 449 450 451 452
 453 454 455 450 451 452 453 454 450 451 452 453 451]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 442 474 341 365
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 230189)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 22)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 499)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 61 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 62 (0, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 63 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 64 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 65 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 66 (0, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 67 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 68 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 69 (1, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 70 (0, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 71 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 72 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 73 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 74 (0, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 75 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 76 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 77 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 78 (0, 1)
---dict_rle----iter_k-(value, len(list(elements))))--- 79 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 80 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 81 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 82 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 83 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 84 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 85 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 86 (0, 119247)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 297555 11 298257 14 298958 18 299661 19 300365 19 301070 17 301776 13 302481 11 303187 7 303893 3
--split_mask_rle--
 ['297555', '11', '298257', '14', '298958', '18', '299661', '19', '300365', '19', '301070', '17', '301776', '13', '302481', '11', '303187', '7', '303893', '3']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 10 10
--mask_rle--> ls_starts, ls_lengths [297555 298257 298958 299661 300365 301070 301776 302481 303187 303893] [11 14 18 19 19 17 13 11  7  3]
--mask_rle--> ls_ends [297565 298270 298975 299679 300383 301086 301788 302491 303193 303895]
--mask_rle-->  LENGTH -- ls_ends 10
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365948    132]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365948    132]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   132 365948]
                                                                                                    
--coco_structure---ys, xs - [422 422 422 422 422 422 422 422 422 422 422 423 423 423 423 423 423 423
 423 423 423 423 423 423 423 424 424 424 424 424 424 424 424 424 424 424
 424 424 424 424 424 424 424 425 425 425 425 425 425 425 425 425 425 425
 425 425 425 425 425 425 425 425 426 426 426 426 426 426 426 426 426 426
 426 426 426 426 426 426 426 426 426 427 427 427 427 427 427 427 427 427
 427 427 427 427 427 427 427 427 428 428 428 428 428 428 428 428 428 428
 428 428 428 429 429 429 429 429 429 429 429 429 429 429 430 430 430 430
 430 430 430 431 431 431] [466 467 468 469 470 471 472 473 474 475 476 464 465 466 467 468 469 470
 471 472 473 474 475 476 477 461 462 463 464 465 466 467 468 469 470 471
 472 473 474 475 476 477 478 460 461 462 463 464 465 466 467 468 469 470
 471 472 473 474 475 476 477 478 460 461 462 463 464 465 466 467 468 469
 470 471 472 473 474 475 476 477 478 461 462 463 464 465 466 467 468 469
 470 471 472 473 474 475 476 477 463 464 465 466 467 468 469 470 471 472
 473 474 475 464 465 466 467 468 469 470 471 472 473 474 466 467 468 469
 470 471 472 468 469 470]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 460 478 422 431
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 239625)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 517)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 117093)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 314360 1 315062 5 315762 10 316464 13 317168 14 317873 14 318578 13 319283 13 319988 13 320694 11 321398 11 322102 12 322806 12 323511 11 324215 10 324919 10 325623 9 326327 8
--split_mask_rle--
 ['314360', '1', '315062', '5', '315762', '10', '316464', '13', '317168', '14', '317873', '14', '318578', '13', '319283', '13', '319988', '13', '320694', '11', '321398', '11', '322102', '12', '322806', '12', '323511', '11', '324215', '10', '324919', '10', '325623', '9', '326327', '8']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 18 18
--mask_rle--> ls_starts, ls_lengths [314360 315062 315762 316464 317168 317873 318578 319283 319988 320694
 321398 322102 322806 323511 324215 324919 325623 326327] [ 1  5 10 13 14 14 13 13 13 11 11 12 12 11 10 10  9  8]
--mask_rle--> ls_ends [314360 315066 315771 316476 317181 317886 318590 319295 320000 320704
 321408 322113 322817 323521 324224 324928 325631 326334]
--mask_rle-->  LENGTH -- ls_ends 18
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365890    190]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365890    190]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   190 365890]
                                                                                                    
--coco_structure---ys, xs - [446 447 447 447 447 447 448 448 448 448 448 448 448 448 448 448 449 449
 449 449 449 449 449 449 449 449 449 449 449 450 450 450 450 450 450 450
 450 450 450 450 450 450 450 451 451 451 451 451 451 451 451 451 451 451
 451 451 451 452 452 452 452 452 452 452 452 452 452 452 452 452 453 453
 453 453 453 453 453 453 453 453 453 453 453 454 454 454 454 454 454 454
 454 454 454 454 454 454 455 455 455 455 455 455 455 455 455 455 455 456
 456 456 456 456 456 456 456 456 456 456 457 457 457 457 457 457 457 457
 457 457 457 457 458 458 458 458 458 458 458 458 458 458 458 458 459 459
 459 459 459 459 459 459 459 459 459 460 460 460 460 460 460 460 460 460
 460 461 461 461 461 461 461 461 461 461 461 462 462 462 462 462 462 462
 462 462 463 463 463 463 463 463 463 463] [375 373 374 375 376 377 369 370 371 372 373 374 375 376 377 378 367 368
 369 370 371 372 373 374 375 376 377 378 379 367 368 369 370 371 372 373
 374 375 376 377 378 379 380 368 369 370 371 372 373 374 375 376 377 378
 379 380 381 369 370 371 372 373 374 375 376 377 378 379 380 381 370 371
 372 373 374 375 376 377 378 379 380 381 382 371 372 373 374 375 376 377
 378 379 380 381 382 383 373 374 375 376 377 378 379 380 381 382 383 373
 374 375 376 377 378 379 380 381 382 383 373 374 375 376 377 378 379 380
 381 382 383 384 373 374 375 376 377 378 379 380 381 382 383 384 374 375
 376 377 378 379 380 381 382 383 384 374 375 376 377 378 379 380 381 382
 383 374 375 376 377 378 379 380 381 382 383 374 375 376 377 378 379 380
 381 382 374 375 376 377 378 379 380 381]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 367 384 446 463
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 191289)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 2)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 518)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 516)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 12)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 18)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 503)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 15)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 8)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 3)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 165940)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 241888 3 242591 4 243293 7 243997 7 244700 8 245404 9 246108 9 246812 10 247517 9 248221 10 248925 10 249629 11 250334 10 251038 10 251742 10 252446 11 253151 10 253855 10 254559 10 255263 11 255968 10 256672 10 257376 11 258080 11 258785 10 259489 11 260193 11 260898 10 261603 9 262308 8 263013 7 263717 8 264422 7 265127 6 265833 4 266539 2
--split_mask_rle--
 ['241888', '3', '242591', '4', '243293', '7', '243997', '7', '244700', '8', '245404', '9', '246108', '9', '246812', '10', '247517', '9', '248221', '10', '248925', '10', '249629', '11', '250334', '10', '251038', '10', '251742', '10', '252446', '11', '253151', '10', '253855', '10', '254559', '10', '255263', '11', '255968', '10', '256672', '10', '257376', '11', '258080', '11', '258785', '10', '259489', '11', '260193', '11', '260898', '10', '261603', '9', '262308', '8', '263013', '7', '263717', '8', '264422', '7', '265127', '6', '265833', '4', '266539', '2']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 36 36
--mask_rle--> ls_starts, ls_lengths [241888 242591 243293 243997 244700 245404 246108 246812 247517 248221
 248925 249629 250334 251038 251742 252446 253151 253855 254559 255263
 255968 256672 257376 258080 258785 259489 260193 260898 261603 262308
 263013 263717 264422 265127 265833 266539] [ 3  4  7  7  8  9  9 10  9 10 10 11 10 10 10 11 10 10 10 11 10 10 11 11
 10 11 11 10  9  8  7  8  7  6  4  2]
--mask_rle--> ls_ends [241890 242594 243299 244003 244707 245412 246116 246821 247525 248230
 248934 249639 250343 251047 251751 252456 253160 253864 254568 255273
 255977 256681 257386 258090 258794 259499 260203 260907 261611 262315
 263019 263724 264428 265132 265836 266540]
--mask_rle-->  LENGTH -- ls_ends 36
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365766    314]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365766    314]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   314 365766]
                                                                                                    
--coco_structure---ys, xs - [343 343 343 344 344 344 344 345 345 345 345 345 345 345 346 346 346 346
 346 346 346 347 347 347 347 347 347 347 347 348 348 348 348 348 348 348
 348 348 349 349 349 349 349 349 349 349 349 350 350 350 350 350 350 350
 350 350 350 351 351 351 351 351 351 351 351 351 352 352 352 352 352 352
 352 352 352 352 353 353 353 353 353 353 353 353 353 353 354 354 354 354
 354 354 354 354 354 354 354 355 355 355 355 355 355 355 355 355 355 356
 356 356 356 356 356 356 356 356 356 357 357 357 357 357 357 357 357 357
 357 358 358 358 358 358 358 358 358 358 358 358 359 359 359 359 359 359
 359 359 359 359 360 360 360 360 360 360 360 360 360 360 361 361 361 361
 361 361 361 361 361 361 362 362 362 362 362 362 362 362 362 362 362 363
 363 363 363 363 363 363 363 363 363 364 364 364 364 364 364 364 364 364
 364 365 365 365 365 365 365 365 365 365 365 365 366 366 366 366 366 366
 366 366 366 366 366 367 367 367 367 367 367 367 367 367 367 368 368 368
 368 368 368 368 368 368 368 368 369 369 369 369 369 369 369 369 369 369
 369 370 370 370 370 370 370 370 370 370 370 371 371 371 371 371 371 371
 371 371 372 372 372 372 372 372 372 372 373 373 373 373 373 373 373 374
 374 374 374 374 374 374 374 375 375 375 375 375 375 375 376 376 376 376
 376 376 377 377 377 377 378 378] [415 416 417 414 415 416 417 412 413 414 415 416 417 418 412 413 414 415
 416 417 418 411 412 413 414 415 416 417 418 411 412 413 414 415 416 417
 418 419 411 412 413 414 415 416 417 418 419 411 412 413 414 415 416 417
 418 419 420 412 413 414 415 416 417 418 419 420 412 413 414 415 416 417
 418 419 420 421 412 413 414 415 416 417 418 419 420 421 412 413 414 415
 416 417 418 419 420 421 422 413 414 415 416 417 418 419 420 421 422 413
 414 415 416 417 418 419 420 421 422 413 414 415 416 417 418 419 420 421
 422 413 414 415 416 417 418 419 420 421 422 423 414 415 416 417 418 419
 420 421 422 423 414 415 416 417 418 419 420 421 422 423 414 415 416 417
 418 419 420 421 422 423 414 415 416 417 418 419 420 421 422 423 424 415
 416 417 418 419 420 421 422 423 424 415 416 417 418 419 420 421 422 423
 424 415 416 417 418 419 420 421 422 423 424 425 415 416 417 418 419 420
 421 422 423 424 425 416 417 418 419 420 421 422 423 424 425 416 417 418
 419 420 421 422 423 424 425 426 416 417 418 419 420 421 422 423 424 425
 426 417 418 419 420 421 422 423 424 425 426 418 419 420 421 422 423 424
 425 426 419 420 421 422 423 424 425 426 420 421 422 423 424 425 426 420
 421 422 423 424 425 426 427 421 422 423 424 425 426 427 422 423 424 425
 426 427 424 425 426 427 426 427]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 411 427 343 378
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 214067)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 4)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 27)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 493)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 28)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 494)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 27)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 496)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 498)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 23)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 515)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 5)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 143661)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
                                                                                                    
--mask_rle-- 275501 6 276205 7 276909 9 277613 10 278317 11 279021 12 279725 13 280429 15 281133 16 281837 17 282541 20 283245 25 283949 29 284654 31 285358 31 286062 31 286766 31 287470 31 288174 31 288879 23 288907 2 289583 21 290287 20 290991 18 291695 17 292399 15 293104 12 293808 11 294512 9 295217 8 295921 7 296625 7 297329 7 298033 6 298738 5 299442 4 300146 4 300850 4 301555 2 302260 1
--split_mask_rle--
 ['275501', '6', '276205', '7', '276909', '9', '277613', '10', '278317', '11', '279021', '12', '279725', '13', '280429', '15', '281133', '16', '281837', '17', '282541', '20', '283245', '25', '283949', '29', '284654', '31', '285358', '31', '286062', '31', '286766', '31', '287470', '31', '288174', '31', '288879', '23', '288907', '2', '289583', '21', '290287', '20', '290991', '18', '291695', '17', '292399', '15', '293104', '12', '293808', '11', '294512', '9', '295217', '8', '295921', '7', '296625', '7', '297329', '7', '298033', '6', '298738', '5', '299442', '4', '300146', '4', '300850', '4', '301555', '2', '302260', '1']
--mask_rle-->  LENGTH -- ls_starts, ls_lengths 40 40
--mask_rle--> ls_starts, ls_lengths [275501 276205 276909 277613 278317 279021 279725 280429 281133 281837
 282541 283245 283949 284654 285358 286062 286766 287470 288174 288879
 288907 289583 290287 290991 291695 292399 293104 293808 294512 295217
 295921 296625 297329 298033 298738 299442 300146 300850 301555 302260] [ 6  7  9 10 11 12 13 15 16 17 20 25 29 31 31 31 31 31 31 23  2 21 20 18
 17 15 12 11  9  8  7  7  7  6  5  4  4  4  2  1]
--mask_rle--> ls_ends [275506 276211 276917 277622 278327 279032 279737 280443 281148 281853
 282560 283269 283977 284684 285388 286092 286796 287500 288204 288901
 288908 289603 290306 291008 291711 292413 293115 293818 294520 295224
 295927 296631 297335 298038 298742 299445 300149 300853 301556 302260]
--mask_rle-->  LENGTH -- ls_ends 40
                                                                                                    
--rle_decode-img_unique, img_counts-
 [0] [366080]
                                                                                                    
                                                                                                    
--rle_decode---return_img_rle_unique, return_img_rle_counts--
 [0 1] [365501    579]
                                                                                                    
--return_img_rle.ndim,return_img_rle.shape----
 2 (520, 704)
--return_img_rle---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
 ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---    ---   
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
--return_img_rle-----mk---
 [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
                                                                                                    
--return_img_rle-----mk---unique, counts--
 [0 1] [365501    579]
                                                                                                    
 --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  -- 
----IMAGE--ID--- 0030fd0e6378
---image_input---CHANNELS--- (520, 704)
---TYPE(cond---- <class 'numpy.ndarray'>
---cond.shape-- (520, 704)
--coco_structure---cond = mk==0--unique_cond, counts--
 [False  True] [   579 365501]
                                                                                                    
--coco_structure---ys, xs - [391 391 391 391 391 391 392 392 392 392 392 392 392 393 393 393 393 393
 393 393 393 393 394 394 394 394 394 394 394 394 394 394 395 395 395 395
 395 395 395 395 395 395 395 396 396 396 396 396 396 396 396 396 396 396
 396 397 397 397 397 397 397 397 397 397 397 397 397 397 398 398 398 398
 398 398 398 398 398 398 398 398 398 398 398 399 399 399 399 399 399 399
 399 399 399 399 399 399 399 399 399 400 400 400 400 400 400 400 400 400
 400 400 400 400 400 400 400 400 401 401 401 401 401 401 401 401 401 401
 401 401 401 401 401 401 401 401 401 401 402 402 402 402 402 402 402 402
 402 402 402 402 402 402 402 402 402 402 402 402 402 402 402 402 402 403
 403 403 403 403 403 403 403 403 403 403 403 403 403 403 403 403 403 403
 403 403 403 403 403 403 403 403 403 403 404 404 404 404 404 404 404 404
 404 404 404 404 404 404 404 404 404 404 404 404 404 404 404 404 404 404
 404 404 404 404 404 405 405 405 405 405 405 405 405 405 405 405 405 405
 405 405 405 405 405 405 405 405 405 405 405 405 405 405 405 405 405 405
 406 406 406 406 406 406 406 406 406 406 406 406 406 406 406 406 406 406
 406 406 406 406 406 406 406 406 406 406 406 406 406 407 407 407 407 407
 407 407 407 407 407 407 407 407 407 407 407 407 407 407 407 407 407 407
 407 407 407 407 407 407 407 407 408 408 408 408 408 408 408 408 408 408
 408 408 408 408 408 408 408 408 408 408 408 408 408 408 408 408 408 408
 408 408 408 409 409 409 409 409 409 409 409 409 409 409 409 409 409 409
 409 409 409 409 409 409 409 409 409 409 409 409 409 409 409 409 410 410
 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410 410
 410 410 410 410 410 411 411 411 411 411 411 411 411 411 411 411 411 411
 411 411 411 411 411 411 411 411 412 412 412 412 412 412 412 412 412 412
 412 412 412 412 412 412 412 412 412 412 413 413 413 413 413 413 413 413
 413 413 413 413 413 413 413 413 413 413 414 414 414 414 414 414 414 414
 414 414 414 414 414 414 414 414 414 415 415 415 415 415 415 415 415 415
 415 415 415 415 415 415 416 416 416 416 416 416 416 416 416 416 416 416
 417 417 417 417 417 417 417 417 417 417 417 418 418 418 418 418 418 418
 418 418 419 419 419 419 419 419 419 419 420 420 420 420 420 420 420 421
 421 421 421 421 421 421 422 422 422 422 422 422 422 423 423 423 423 423
 423 424 424 424 424 424 425 425 425 425 426 426 426 426 427 427 427 427
 428 428 429] [236 237 238 239 240 241 236 237 238 239 240 241 242 236 237 238 239 240
 241 242 243 244 236 237 238 239 240 241 242 243 244 245 236 237 238 239
 240 241 242 243 244 245 246 236 237 238 239 240 241 242 243 244 245 246
 247 236 237 238 239 240 241 242 243 244 245 246 247 248 236 237 238 239
 240 241 242 243 244 245 246 247 248 249 250 236 237 238 239 240 241 242
 243 244 245 246 247 248 249 250 251 236 237 238 239 240 241 242 243 244
 245 246 247 248 249 250 251 252 236 237 238 239 240 241 242 243 244 245
 246 247 248 249 250 251 252 253 254 255 236 237 238 239 240 241 242 243
 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 236
 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254
 255 256 257 258 259 260 261 262 263 264 237 238 239 240 241 242 243 244
 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262
 263 264 265 266 267 237 238 239 240 241 242 243 244 245 246 247 248 249
 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267
 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254
 255 256 257 258 259 260 261 262 263 264 265 266 267 237 238 239 240 241
 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259
 260 261 262 263 264 265 266 267 237 238 239 240 241 242 243 244 245 246
 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264
 265 266 267 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 238 239
 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257
 258 259 260 266 267 238 239 240 241 242 243 244 245 246 247 248 249 250
 251 252 253 254 255 256 257 258 238 239 240 241 242 243 244 245 246 247
 248 249 250 251 252 253 254 255 256 257 238 239 240 241 242 243 244 245
 246 247 248 249 250 251 252 253 254 255 238 239 240 241 242 243 244 245
 246 247 248 249 250 251 252 253 254 238 239 240 241 242 243 244 245 246
 247 248 249 250 251 252 239 240 241 242 243 244 245 246 247 248 249 250
 239 240 241 242 243 244 245 246 247 248 249 239 240 241 242 243 244 245
 246 247 240 241 242 243 244 245 246 247 240 241 242 243 244 245 246 240
 241 242 243 244 245 246 240 241 242 243 244 245 246 240 241 242 243 244
 245 241 242 243 244 245 241 242 243 244 241 242 243 244 241 242 243 244
 242 243 243]
                                                                                                    
--coco_structure---x1,x2,y1,y2---
 236 267 391 429
                                                                                                    
---dict_rle---aaa--- {'counts': [], 'size': [520, 704]}
---dict_rle----iter_k-(value, len(list(elements))))--- 0 (0, 123111)
---dict_rle----iter_k-(value, len(list(elements))))--- 1 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 2 (0, 507)
---dict_rle----iter_k-(value, len(list(elements))))--- 3 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 4 (0, 501)
---dict_rle----iter_k-(value, len(list(elements))))--- 5 (1, 25)
---dict_rle----iter_k-(value, len(list(elements))))--- 6 (0, 495)
---dict_rle----iter_k-(value, len(list(elements))))--- 7 (1, 28)
---dict_rle----iter_k-(value, len(list(elements))))--- 8 (0, 492)
---dict_rle----iter_k-(value, len(list(elements))))--- 9 (1, 33)
---dict_rle----iter_k-(value, len(list(elements))))--- 10 (0, 487)
---dict_rle----iter_k-(value, len(list(elements))))--- 11 (1, 37)
---dict_rle----iter_k-(value, len(list(elements))))--- 12 (0, 484)
---dict_rle----iter_k-(value, len(list(elements))))--- 13 (1, 37)
---dict_rle----iter_k-(value, len(list(elements))))--- 14 (0, 484)
---dict_rle----iter_k-(value, len(list(elements))))--- 15 (1, 37)
---dict_rle----iter_k-(value, len(list(elements))))--- 16 (0, 483)
---dict_rle----iter_k-(value, len(list(elements))))--- 17 (1, 35)
---dict_rle----iter_k-(value, len(list(elements))))--- 18 (0, 486)
---dict_rle----iter_k-(value, len(list(elements))))--- 19 (1, 31)
---dict_rle----iter_k-(value, len(list(elements))))--- 20 (0, 490)
---dict_rle----iter_k-(value, len(list(elements))))--- 21 (1, 28)
---dict_rle----iter_k-(value, len(list(elements))))--- 22 (0, 493)
---dict_rle----iter_k-(value, len(list(elements))))--- 23 (1, 24)
---dict_rle----iter_k-(value, len(list(elements))))--- 24 (0, 497)
---dict_rle----iter_k-(value, len(list(elements))))--- 25 (1, 21)
---dict_rle----iter_k-(value, len(list(elements))))--- 26 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 27 (1, 20)
---dict_rle----iter_k-(value, len(list(elements))))--- 28 (0, 500)
---dict_rle----iter_k-(value, len(list(elements))))--- 29 (1, 19)
---dict_rle----iter_k-(value, len(list(elements))))--- 30 (0, 502)
---dict_rle----iter_k-(value, len(list(elements))))--- 31 (1, 17)
---dict_rle----iter_k-(value, len(list(elements))))--- 32 (0, 504)
---dict_rle----iter_k-(value, len(list(elements))))--- 33 (1, 16)
---dict_rle----iter_k-(value, len(list(elements))))--- 34 (0, 505)
---dict_rle----iter_k-(value, len(list(elements))))--- 35 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 36 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 37 (1, 14)
---dict_rle----iter_k-(value, len(list(elements))))--- 38 (0, 506)
---dict_rle----iter_k-(value, len(list(elements))))--- 39 (1, 13)
---dict_rle----iter_k-(value, len(list(elements))))--- 40 (0, 508)
---dict_rle----iter_k-(value, len(list(elements))))--- 41 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 42 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 43 (1, 11)
---dict_rle----iter_k-(value, len(list(elements))))--- 44 (0, 509)
---dict_rle----iter_k-(value, len(list(elements))))--- 45 (1, 10)
---dict_rle----iter_k-(value, len(list(elements))))--- 46 (0, 510)
---dict_rle----iter_k-(value, len(list(elements))))--- 47 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 48 (0, 511)
---dict_rle----iter_k-(value, len(list(elements))))--- 49 (1, 9)
---dict_rle----iter_k-(value, len(list(elements))))--- 50 (0, 512)
---dict_rle----iter_k-(value, len(list(elements))))--- 51 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 52 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 53 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 54 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 55 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 56 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 57 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 58 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 59 (1, 6)
---dict_rle----iter_k-(value, len(list(elements))))--- 60 (0, 514)
---dict_rle----iter_k-(value, len(list(elements))))--- 61 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 62 (0, 513)
---dict_rle----iter_k-(value, len(list(elements))))--- 63 (1, 7)
---dict_rle----iter_k-(value, len(list(elements))))--- 64 (0, 226829)
---dict_rle---bbb- {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}
---root_dict--KEY, root_dict-val--TYPE---
 categories <class 'list'>
---root_dict--KEY, root_dict-val--TYPE---
 images <class 'list'>
---root_dict--KEY, root_dict-val--TYPE---
 annotations <class 'list'>
--TYPE-root-- <class 'dict'>
---root--
 {'categories': [{'name': 'shsy5y', 'id': 1}], 'images': [{'id': '0030fd0e6378', 'width': 704, 'height': 520, 'file_name': 'train/0030fd0e6378.png'}], 'annotations': [{'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [619, 410, 16, 22], 'area': 200, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 100}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [652, 380, 20, 24], 'area': 337, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 101}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [654, 402, 12, 19], 'area': 175, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 102}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [566, 406, 10, 19], 'area': 130, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 103}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [682, 497, 22, 23], 'area': 354, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 104}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [556, 471, 44, 17], 'area': 411, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 105}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [627, 445, 25, 19], 'area': 288, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 106}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [553, 402, 15, 27], 'area': 246, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 107}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [522, 414, 38, 16], 'area': 369, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 108}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [516, 456, 34, 20], 'area': 248, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 109}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [571, 401, 23, 33], 'area': 432, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 110}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [486, 455, 34, 26], 'area': 243, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 111}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [488, 434, 13, 12], 'area': 122, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 112}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [443, 468, 20, 18], 'area': 205, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 113}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [444, 480, 30, 23], 'area': 319, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 114}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [413, 481, 35, 32], 'area': 349, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 115}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [426, 476, 21, 17], 'area': 168, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 116}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [374, 479, 22, 18], 'area': 186, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 117}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [386, 478, 27, 17], 'area': 219, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 118}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [628, 477, 40, 14], 'area': 361, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 119}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [530, 471, 17, 28], 'area': 284, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 120}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [533, 489, 42, 28], 'area': 444, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 121}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [480, 436, 15, 23], 'area': 218, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 122}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [602, 99, 30, 18], 'area': 332, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 123}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [597, 350, 23, 26], 'area': 360, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 124}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [330, 6, 12, 11], 'area': 107, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 125}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [384, 228, 14, 12], 'area': 96, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 126}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [395, 507, 28, 13], 'area': 213, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 127}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [616, 466, 35, 13], 'area': 297, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 128}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [632, 403, 26, 14], 'area': 221, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 129}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [605, 402, 20, 16], 'area': 221, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 130}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [500, 437, 21, 13], 'area': 184, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 131}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [586, 464, 44, 22], 'area': 462, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 132}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [571, 451, 30, 12], 'area': 223, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 133}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [519, 423, 12, 10], 'area': 74, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 134}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [562, 433, 16, 26], 'area': 238, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 135}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [511, 428, 14, 15], 'area': 135, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 136}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [476, 441, 15, 35], 'area': 300, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 137}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [548, 424, 24, 27], 'area': 260, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 138}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [516, 487, 19, 12], 'area': 173, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 139}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [550, 457, 61, 16], 'area': 447, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 140}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [621, 506, 16, 14], 'area': 131, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 141}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [518, 456, 18, 11], 'area': 147, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 142}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [627, 426, 29, 14], 'area': 230, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 143}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [396, 410, 26, 59], 'area': 612, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 144}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [442, 341, 33, 25], 'area': 445, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 145}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [460, 422, 19, 10], 'area': 132, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 146}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [367, 446, 18, 18], 'area': 190, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 147}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [411, 343, 17, 36], 'area': 314, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 148}, {'segmentation': {'counts': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'size': [520, 704]}, 'bbox': [236, 391, 32, 39], 'area': 579, 'image_id': '0030fd0e6378', 'category_id': 1, 'iscrowd': 0, 'id': 149}]}
